	.TITLE VPLRC - VIDEO PINBALL (LOEWEN REPLAY CHANGE)
	.ASECT
	.SBTTL ##########################
	.SBTTL # ALTERED REPLAY LEVELS	#
	.SBTTL # FOR LOEWEN AUTOMATEN	#
	.SBTTL # 11-DEC-79 M.ALBAUGH	#
	.SBTTL ##########################
	.RADIX 16
;
;PROGRAMMER:	ED LOGG
;
;CHECKER
;
;DATE INITIATED:  JUNE 7, 1978
;
;CHARGENUMBER:	5G121
;
;DISK NUMBER:	53
;
;HARDWARE:	VIDEO PINBALL
;
;MEMORY REQUIREMENTS:
;	PROGRAM:	2000-3FFF (8K)
;	VIDEO RAM:	400-7FF AND 200-29F
;	MOTION OBJECT RAM: 4 WORD WINDOW IN VIDEO RAM
;	MOTION OBJECT ROTATION:  2000 CONTROLS POSITION WITHIN WINDOW
;	ZERO PAGE RAM:	0-1FF
;	VIDEO RAM ORIGIN:  UPPER RIGHT CORNER
;	MOTION OBJECT ORIGIN:  LOWER LEFT CORNER OF WINDOW (3 H TOO SOON)
;
;INTERRUPT REQUIREMENTS:  NMI (PLUNGER), IRQ (8/FRAME)
;
;LINK COMMAND STRING:
;	R LINKM
;	*RK1:VPLRC=DX1:VPLRC,SMUSIC,VPMUS,VPCOIN,VPTEST
;	*R ROM
;	3M:=RK1:VPLRC.SAV
;		(STARTING ADDRESS=2000)
;
;PROGRAM DESCRIPTION:  VPBALL - VIDEO PINBALL USING DROP TARGETS, THUMPERS,
;	SLINGSHOTS, 4 FLIPPERS, EXTRA BALL, SPECIAL, DOUBLE BONUS.


;ENTRY POINTS
	.GLOBL START		;START OF PROGRAM
	
;ZERO PAGE DECLARATIONS
	.GLOBL OUT1D
	.GLOBL OUT2D
	.GLOBL FRAME
	.GLOBL LEDS
	.GLOBL FLIP,FLIPDR,FLPFLG
	.GLOBL TEMP1,TEMP2,TEMP3,TEMP4
	.GLOBL PLUNG
	.GLOBL BONG
	.GLOBL $CMODE		;COIN MODE FOR COINS
	.GLOBL $COINA		;COIN SWITCH
	.GLOBL $LAM		;SLAM SWITCH ADDRESS
	.GLOBL $LMBIT		;SLAM MASK
	.GLOBL $$CRDT		;CREDIT FOR COINS
	.GLOBL $CNSTT		;GLOBALS FOR COIN ROUTINE
	.GLOBL $PSTSL
	.GLOBL $INTCT
	.GLOBL $LMTIM
	.GLOBL $CNCT
	.GLOBL HPTR,LPTR	;MUSIC TABLE ADDRESS
	.GLOBL NOTEL		;NOTE LEVEL OUTPUT (0-FF)
	.GLOBL OCTL		;OCTAVE LEVEL OUTPUT (1-6, 0=0FF)
	.GLOBL CNTRL		;NON-ZERO TO START MUSIC
	.GLOBL NOTE		;START OF MUSIC ZERO PAGE LOCATIONS
	.GLOBL LEN,COUNTER,CHORD,OCTAVE,TEMPO,LTEMPO,PAUSE,LPAUSE,MEAS,LMEAS
	.GLOBL $CCTIM
	
;EXTERNAL ENTRY POINTS
	.GLOBL PWRON		;POWER ON RESET ADDRESS
	.GLOBL STEST		;SELF-TEST PROCESSING
	.GLOBL HEX		;CONVERT TO DISPALY CHARACTER
	.GLOBL IMUSIC		;INITIALIZE MUSIC
	.GLOBL SMUSIC		;START MUSIC
	.GLOBL NOISE1		;1000 POINT SOUND
	.GLOBL NOISE2		;100 POINT SOUND
	.GLOBL NOISE3		;10 POINT SOUND
	.GLOBL NOISE4		;BONUS COUNTDOWN
	.GLOBL NOISE5		;2X BONUS
	.GLOBL NOISE6		;FREE PLAY
	.GLOBL NOISE7		;SPECIAL/EXTRA BALL
	.GLOBL NOISE8		;MATCH COUNTDOWN
	
;MEMORY DEFINITIONS
	.GLOBL DVSR
	.GLOBL INPUT1
	.GLOBL INPUT2
	.GLOBL OUT1
	.GLOBL OUT2
	.GLOBL LEDOUT
	.GLOBL WTCHDG
	.GLOBL BALPOS
	.GLOBL OPTSW
	.SBTTL MEMORY MAP

PLYFLD	=400			;400-7FF AND 200-29F=PLAYFIELD
DVSR	=0800			;DIVISOR FOR NOTE DESIRED (WRITE ONLY)
INPUT2	=0800			;D7=VBLANK (HIGH IS ON)
				;D6=NUDGE (LOW IS ON)
				;D2-D5=NOT USED
				;D1=PLUNGER 2 (LOW IS ON)
				;D0=PLUNDGER 1 (STARTS NMI-LOW IS ON)
LEDOUT  =0801			;IRQ ACKNOWLEDGE, LED OUT D0-D3=HORIZ
WTCHDG	=0802			;WATCHDOG
BALPOS	=0804			;BALL POSITION IN WINDOW, D4-D7=VERTICAL RELATIVE TO VIDEO
				;D0-D3=HORIZ
OUT1	=0805			;D5-D7=NOT USED
				;D4=NMI MASK (HIGH FOR ON)
				;D3=LOCKOUT COIL (HIGH FOR ON=ALLOWS COINS)
				;D2=OCTAVE 2
				;D1=OCTAVE 1
				;D0=OCTABE 0
OUT2	=0806			;D7=ATTRACT (HIGH FOR ON)
				;D6=BELL (LOW FOR ON-TAPERS OFF)
				;D5=BONG (HIGH FOR ON)
				;D4=COIN COUNTER (HIGH FOR ON)
				;D3=SPARE
				;D2=VOLUME 2 (HIGH FOR ON)
				;D1=VOLUNE 1
				;D0=VOLUNE 0
INPUT1	=1000			;D7=SPARE
				;D6=TEST SWITCH (LOW FOR ON)
				;D5=SLAM (LOW FOR ON)
				;D4=START (HIGH FOR ON)
				;D3=RIGHT FLIPPER (HIGH FOR OFF)
				;D2=LEFT FLIPPER (HIGH FOR OFF)
				;D1=COIN 2 (LOW FOR ON)
				;D0=COIN 1 (LOW FOR ON)
$LAM	=INPUT1			;SLAM SWITCH ADDRESS
$LMBIT	=20			;MASK FOR SLAM SWITCH
OPTSW	=1800			;D6-D7=COIN MODE (LOW IS ON)
				;D4-D5=LANGUAGE (LOW IS ON)
				;D3=3 OR 5 BALL (LOW IS ON=5)
				;D2=FREE GAMES ALLOWED ELSE SPECIAL IS
				;80000 POINTS (LOW IS ON=FREE GAME)
				;D1=1 FOR EXTRA BALL ALLOWED ELSE 50000 POINTS
				;(LOW IS ON=EXTRA BALL)
				;D0=BONUS NEEDED FOR FREE GAMES (0=60000/BALL, 1=70000/BALL)
				;(IF D2 OFF THEN D0 IGNORED)
PROG	=2000			;PROGRAM SPACE
	
	
;PLAYFIELD DEFINITIONS
	
WL	=28			;SOLID BLOCK FO WALL (PASSIVE)
WL0	=3F			;LOWER RIGHT WALL
WL1	=3E			;UPPER RIGHT WALL
WL2	=7E			;UPPER LEFT WALL
WL3	=7F			;LOWER LEFT WALL
IWL1	=2F			;INVISIBLE UPPER RIGHT WALL
SD0	=3A			;RIGHT SIDE WALL
SD1	=7A			;LEFT SIDE WALL
TRG	=27			;HORIZ/VERTICAL TARGET
TRG0	=2E			;LOWER RIGHT TARGET
TRG1	=2D			;UPPER   "     "
TRG2	=6D			;UPPER LEFT    "
TRG3	=6E			;LOWER   "     "
THP	=29			;SOLID THUMPER
THP0	=2C			;LOWER RIGHT THUMPER
THP1	=2B			;UPPER   "     "
THP2	=6B			;UPPER LEFT    "
THP3	=6C			;LOWER   "     "
DTRG0	=3C			;HORIZONTAL DROP TARGET
DTRG1	=3D			;DIAGONAL DROP TARGET
	
	
;ZERO PAGE DEFINITIONS

ZERO:	.BLKB 1			;CHECK FOR BLITZED RAM (LEFT SET TO ZERO)
NPLAYR:	.BLKB 1			;NUMBER OF PLAYERS (0-4)(0 FOR ATTRACT MODE)
PLAYR:	.BLKB 1			;PLAYER NUMBER (0-3)
BALL:	.BLKB 1			;BALL NUMBER (1-5)
ENDBAL:	.BLKB 1			;NON-ZERO WHEN BALL HAS DRAINED
FRAME:  .BLKB 2			;FRAME COUNTER IN MULTIPLES OF 1/8 FRAMES
CFLIP:	.BLKB 1			;CURRENT FLIPPER INDEX (0 OR 1)
FLIP:	.BLKB 2			;LEFT AND RIGHT FLIPPER POSITIONS
FLIPDR:	.BLKB 2			;FLIPPER DIRECTION 1=UP 0=NO CHANGE -1=DOWN
HPOS:	.BLKB 2			;BALL HORIZONAL POSITION (LSB,MSB)0 TO FF FOR MSB
VPOS:	.BLKB 3			;BALL VERTICAL POSITION (LSB,MSB)0 TO 160 FOR MSB
X:	.BLKB 1			;X COORDINATE CHANGE FOR BALL (-7F TO 7F)
Y:	.BLKB 1			;Y     "         "    "   "   (-7F TO 7F)
HP:	.BLKB 1			;HPOS MOD 8
VP:	.BLKB 1			;VPOS MOD 8
W1:	.BLKB 1			;LOWER LEFT WINDOW CHARACTER (BITS 0-5)
W2:	.BLKB 1			;LOWER RIGHT   "       "          "
W3:	.BLKB 1			;UPPER LEFT    "       "          "
W4:	.BLKB 1			;UPPER RIGHT   "       "          "
WINDOW:	.BLKB 2			;CURRENT WINDOW POSITION (LOWER LEFT CORNER)
	.BLKB 2			;WINDOW +20
	.BLKB 2			;OLD WINDOW POSITION
	.BLKB 2			;OLD WINDOW +20
SAMPLR:	.BLKB 1			;NON-ZERO FOR SAME PLAYER SHOOTS AGAIN
ROLLOV:	.BLKB 1			;ROLLOVER SWITCH DEBOUNCE
PLUNG:	.BLKB 2			;NMI PLUNGER TIMING (LSB,MSB)
DPTRG0:	.BLKB 1			;NUMBER OF HORIZ. DROP TARGETS UP
	.BLKB 1			;COUNT BEFORE RESETING TARGETS
DPTRG1:	.BLKB 1			;NUMBER OF VERTICAL DROP TARGETS UP
	.BLKB 1			;COUNT BEFORE RESETING TARGETS
LITTHP:	.BLKB 2			;1 FOR LIT THUMPER (LEFT & MIDDLE RESP.)
LEDS:	.BLKB 8			;4 BITS USED FOR LEDOUT EACH 1/8 FRAME
				;0 D3=LIGHT FOR START LICON
				;  D2=UPPER MIDDLE ROLLOVER
				;  D1=SPECIAL
				;  D0=8
				;1 D3=UPPER RIGHT ROLLOVER
				;  D2=LOWER LEFT TARGET
				;  D1=9
				;  D0=1
				;2 D3=UPPER DROP TARGET BONUS
				;  D2=MIDDLE LEFT TARGET
				;  D1=10
				;  D0=2
				;3 D3=RIGHT UPPER TARGET
				;  D2=UPPER LEFT TARGET
				;  D1=SAME PLAYER SHOOTS AGAIN
				;  D0=3
				;4 D3=MIDDLE UPPER TARGET
				;  D2=TARGET FOR 2/3 BONUS
				;  D1=DOUBLE BONUS
				;  D0=4
				;5 D3=UPPER LEFT TARGET
				;  D2=2 BONUS
				;  D1=LOWER RIGHT ROLLOVER
				;  D0=5
				;6 D3=NOT USED
				;  D2=ROLLOVER FOR 2/3 BONUS ADVANCE
				;  D1=LOWER LEFT ROLLOVER
				;  D0=6
				;7 D3=NOT USED
				;  D2=3 BONUS
				;  D1=EXTRA BALL
				;  D0=7
SCORE1:	.BLKB 5			;LSB OF SCORE (INCLUDES HIGH SCORE)
SCORE2:	.BLKB 5			;MIDDLE SB OF SCORE
SCORE3:	.BLKB 5			;MSB OF SCORE
BONUS:	.BLKB 1			;BONUS ACCRUED
BON2X:  .BLKB 1			;2X BONUS FLAG FOR COUNTING BONUS
PT10:	.BLKB 1			;NUMBER OF 10'S TO ADD TO SCORE
PT100:	.BLKB 1			;   "   "  100'S   "     "
PT1000:	.BLKB 1			;   "   "  1000'S  "     "
BELL:	.BLKB 1			;BELL FOR START
BONG:	.BLKB 1			;BONG FOR CREDITS
SPEC:	.BLKB 1			;SPECIAL NOISE FLAG
FREEBL:	.BLKB 1			;FREE BALL NOISE FLAG
REPLAY:	.BLKB 1			;REPLAY SCORE NOISE
BONS2X:	.BLKB 1			;2X BONUS NOISE GENERATION
COLFLG:	.BLKB 1			;NON-ZERO IF COLLISION OCCURED WITH PLAYFIELD
FLPFLG:	.BLKB 2			;NON-ZERO IF FLIPPER COLLISION OCCURED
STRTSW:	.BLKB 1			;START SWITCH DEBOUNCE FLAG
NUDGSW:	.BLKB 1			;NUDGE DEBOUNCE
NUDGE:	.BLKB 1			;NUDGE VALUE
FRAMCK:	.BLKB 1			;NON-ZERO IF WE CAN SKIP CHECK IN WAIT
TEMP1:  .BLKB 2			;TEMPORARY LOCATIONS
TEMP2:	.BLKB 2		
TEMP3:	.BLKB 2
TEMP4:	.BLKB 1
OUT1D:	.BLKB 1			;LAST OUT1 VALUES
OUT2D:	.BLKB 1			;LAST OUT2 VALUES
FRPLY1:	.BLKB 4			;FIRST REPLAY ALREADY HIT
RPLY1:	.BLKB 1			;FIRST REPLAY SCORE NEEDED
BLITZ:	.BLKB 1			;CHECK FOR BLITZED RAM (LEFT SET TO ZERO)
$$CRDT:	.BLKB 1			;CREDIT ACCUMULATED
$CMODE:	.BLKB 1			;COIN MODE INPUT FOR COIN ROUTINE (0 TO 3)
$PSTSL:	.BLKB 1			;COIN ROUTINE COUNTERS
$LMTIM:	.BLKB 1
	.BLKB 1			;$PSTSL FOR SECOND MECH
$CNCT:	.BLKB 4
$CNSTT	=$CNCT+1
$COINA:	.BLKB 1			;D7=LEFT COIN SWITCH
$INTCT:	.BLKB 1
	.BLKB 1			;D7=RIGHT COIN SWITCH
$CCTIM:	.BLKB 1
LPTR:	.BLKB 1			;POINTER TO MUSIC TABLE
HPTR:	.BLKB 1
NOTEL:	.BLKB 1			;NOTE DIVISOR (0-FF)
OCTL:	.BLKB 1			;OCTAVE (0-6, 7 IS OFF)
CNTRL:	.BLKB 1			;NON-ZERO IF MUSIC ACTIVE
NOTE:	.BLKB 1			;MUSIC ZERO PAGE LOCATIONS
LEN:	.BLKB 1
COUNTER:.BLKB 1
CHORD:	.BLKB 1
OCTAVE:	.BLKB 1
PAUSE:	.BLKB 1
LPAUSE:	.BLKB 1
TEMPO:	.BLKB 1
LTEMPO:	.BLKB 1
MEAS:	.BLKB 1
LMEAS:	.BLKB 1
MATCHN:	.BLKB 1			;MATCH NUMBER
	.SBTTL	MAIN LOOP
	.=PROG
	JMP PWRON		;FOR DEVELOPMENT SYSTEM ONLY
START:  LDA I,04		;SET ORGINAL BALL POSITION TO DUMMY VALUE
	STA WINDOW+5
	STA WINDOW+7
	LDA I,01		;MOVE BALL OFF SCREEN
	STA VPOS+2
	LDA I,40
	STA VPOS+1
	JSR INIT		;INITIALIZE PLAYFIELD
5$:	JSR IMUSIC		;INITIALIZE MUSIC
	JSR ATTRCT		;ATTRACT MODE
10$:	INC BALL
12$:	JSR RESBAL		;RESET BALL
20$:	JSR WAIT		;WAIT FOR VBLANK AND GENERATE NOISES
	JSR RESTRG		;CHECK FOR RESET OF DROP TARGETS
	JSR CHKPLG		;CHECK PLUNGER
	JSR GETPOS		;GET NEW BALL POSITION
	JSR GRAV		;CHANGE DUE TO GRAVITY AND FRICTION
	JSR COLIDE		;CHECK COLLISIONS
	JSR GETPOS		;MOVE BALL 5 TIMES A FRAME
	JSR COLIDE		;AND CHECK FOR COLLISIONS EACH TIME
	JSR GETPOS
	JSR COLIDE
	JSR GETPOS
	JSR COLIDE
	JSR GETPOS
	JSR COLIDE
	INC FRAMCK		;LET WAIT SKIP CHECK FOR VBLANK
	LDA ENDBAL
	BEQ 20$			;BALL STILL IN PLAY
	JSR GETPOS		;ELIMINATE BALL FROM VIDEO
25$:	JSR WAIT		;VBLANK PROCESSING AND GENERATE NOISES
	LDA PT10
	ORA PT100
	ORA PT1000
	ORA BONUS
	BNE 25$			;WAIT TIL NOISE/SCORE COMPLETES
	LDA SAMPLR
	BNE 12$			;SHOOT AGAIN
	INC PLAYR
	LDA PLAYR
	CMP NPLAYR
	BCC 12$			;NEXT PLAYER
	LDA I,0
	STA PLAYR
	LDX I,02
	LDA A,OPTSW
	AND I,08
	BNE 30$			;3 BALL GAME
	LDX I,04
30$:	CPX BALL
	BCS 10$			;GAME NOT OVER
	JSR MATCH		;MATCH FEATURE
	LDX I,03
40$:	LDA ZX,SCORE3		;UPDATE HIGH SCORE
	CMP SCORE3+4
	BEQ 42$			;NO NEW HIGH SCORE
	BCC 48$
	BCS 46$			;NEW HIGH SCORE
42$:	LDA ZX,SCORE2
	CMP SCORE2+4
	BEQ 44$			;CHECK NEXT DIGIT
	BCC 48$			;NO HIGH SCORE
	BCS 46$			;NEW HIGH SCORE
44$:	LDA ZX,SCORE1
	CMP SCORE1+4
	BCC 48$			;NO HIGH SCORE
46$:	LDA ZX,SCORE3
	STA SCORE3+4
	LDA ZX,SCORE2
	STA SCORE2+4
	LDA ZX,SCORE1
	STA SCORE1+4
48$:	DEX
	BPL 40$
	JMP 5$

	.SBTTL ATTRACT MODE PROCESSING
;ATTRCT - ATTRACT MODE LOOP
ATTRCT:	LDA I,0
	STA NPLAYR		;FLAG ATTRACT MODE
	STA RPLY1		;FLAG FOR NO FREE PLAY
	LDA OUT1D		;TURN OFF OCTAVES
	ORA I,07
	STA OUT1D
	STA A,OUT1
	LDA I,06
	STA LEDS+7
	LDA I,02
	STA LEDS+4
	LDA I,0C
	STA LEDS+3
	LDA SCORE1+4
	ORA SCORE2+4
	ORA SCORE3+4
	BEQ 1$			;WRITE HIGH SCORE IF ITS NON-ZERO
	LDA I,04
	JSR MESS
	LDX I,04
	LDA I,0EC
	JSR SCORE		;WRITE SCORE
1$:	LDA A,OPTSW
	AND I,04
	BNE 2$			;IF NO FREE GAMES
	LDA I,05
	JSR MESS		;BONUS FOR
	LDA A,OPTSW
	LDY I,04
	AND I,08
	BEQ 20$			;IF 5 BALL GAME
	LDY I,02
20$:	LDA A,OPTSW
	AND I,01
	LSR

	.SBTTL ##REPLAY LEVEL CHANGE
	LDA I,16		;160000 POINTS PER BALL
;ABOVE WAS  LDA I,06
	BCC 24$
	LDA I,17		;170000 POINTS PER BALL
;ABOVE WAS  LDA I,07
24$:	STA TEMP1
	SED
25$:	CLC
	ADC TEMP1
	DEY
	BNE 25$			;LOOP FOR 3 OR 5 BALLS
	STA RPLY1		;SCORE NEEDED FOR REPLAY
	CLD
	LSR
	LSR
	LSR
	LSR
	BEQ 27$			;ZERO SUPPRESS
	JSR HEX
	STA A,5CB		;DISPLAY BONUS NEEDED
27$:	LDA RPLY1
	JSR HEX
	STA A,5CC
	LDA I,70		;FILL WITH ZEROES
	STA A,5CD
	STA A,5CE
	STA A,5CF
	STA A,5D0
2$:	JSR WAIT		;WAIT FOR VBLANK, ETC.
	LDA A,OPTSW
	AND I,0C0
	BNE 4$			;IF NOT FREE PLAY
	LDX I,04
	STX $$CRDT
4$:	ASL
	ROL
	ROL
	JSR MESS		;WRITE GAME COST
	LDA $$CRDT
	BEQ 6$			;NO CREDIT YET
	LDA FRAME
	AND I,0F8
	BNE 6$			;NOT TIME TO FLASH
	LDA FRAME+1
	LSR
	LDA I,08
	LDY I,06
	BCC 5$			;TURN MESSAGE ON
	LDY I,86		;CLEAR MESSAGE
	LDA I,00
5$:	STA TEMP1		;FLASH SERVE LIGHT
	LDA LEDS
	AND I,07
	ORA TEMP1
	STA LEDS
	TYA
	JSR MESS		;PRESS START
6$:	JSR ATLITE		;ATTRACT MODE LITES
	LDA NPLAYR
	BEQ 2$			;IF NO PLAYERS
	LDA OUT2D
	AND I,78
	ORA I,07
	STA OUT2D		;TURN OFF ATTRACT AND TURN ON VOLUME
	STA A,OUT2
	JSR INIT		;INITIALIZE PLAYFIELD
	LDY I,01
	LDA RPLY1
	BEQ 7$			;IF NOT REPLAY ALLOW
	DEY	
7$:	LDA I,0
	STA BALL		;RESET BALL NUMBER
	STA PLAYR		;RESET PLAYER NUMBER
	LDX I,3
8$:	STA ZX,SCORE1		;CLEAR SCORES
	STA ZX,SCORE2
	STA ZX,SCORE3
	STY ZX,FRPLY1		;CLEAR REPLAY FLAGS
	DEX
	BPL 8$
	RTS

CKSUM0:	.BYTE 0BB		;2000-23FF
	.SBTTL	PLAYFIELD COLLISION DETECTION PROCESSING
COLIDE:	LDA I,0
	STA COLFLG
	JSR DRPTG		;DROP TARGET COLLISIONS
	JSR ROLLC		;ROLLOVER COLLISIONS
	LDA I,02
	AND LEDS+5
	AND LEDS+6
	ASL
	AND LEDS+6
	AND LEDS
	ASL
	AND LEDS+1
	BEQ 10$			;NOT ALL 5 ROLLOVERS
	LDA LEDS+4
	AND I,02
	BNE 10$			;ALREADY ON
	LDA LEDS+4
	ORA I,02
	STA LEDS+4		;LIGHT 2X BONUS
	DEC BONS2X
10$:	JSR COLID5		;45 DEGREE ANGLE COLLISIONS
	JSR COLID6
;	JSR COLID7		;CALLED BY COLID5
;	JSR COLID8		;CALLED BY COLID6
	JSR COLID1		;SIDE WALL COLLISION
;	JSR COLID2		;LEFT SIDE WALL COLLISION (CALLED BY COLIDE1)
	JSR COLID3		;TOP WALL COLLISION
;	JSR COLID4		;BOTTOM WALL COLLISION (CALLED BY COLID3)
	LDX I,0		;NOT CALLED IF COLID1-COLID4 GET A HIT
	LDA FLPFLG		;THIS WILL SAVE PROCESSOR TIME
	BNE 30$			;ALREADY HIT FLIPPER
	LDA HPOS+1
	CMP I,78
	BCS 30$			;CANNOT HIT FLIPPER
	JMP FLIPC		;CHECK FLIPPER COLLISIONS FOR LEFT FLIPPER

30$:	LDA FLPFLG+1
	BNE 90$			;ALREADY HIT RIGHT FLIPPER
	LDA HPOS+1
	CMP I,78
	BCC 90$			;CANNOT HIT FLIPPER
	JSR COMPX		;X=-X
	LDA I,08
	SEC
	SBC HP			;HP=8-HP
	STA HP
	LDA W1			;INVERT WINDOW PICTURES
	EOR I,40
	TAX
	LDA W2
	EOR I,40
	STA W1
	STX W2
	LDA W3
	EOR I,40
	TAX
	LDA W4
	EOR I,40
	STA W3
	STX W4
	LDX I,1
	JSR FLIPC		;RIGHT SIDE FLIPPER
	JSR COMPX		;RESET X
90$:	RTS


;DRPTG - CHECK FOR DROP TARGETS
DRPTG:	LDY I,0
	LDA HP
	CMP I,08
	BCS 40$			;IF HP>7
	LDA W1			;HP <= 7
	CMP I,DTRG0
	BNE 30$			;IF NOT DROP TARGET
5$:	LDA VP			;VP<=1
	CMP I,02
	BCS 25$
	LDA Y
	BMI 20$			;IF Y<0 TO NOT DROP TARGET
	LDA NY,WINDOW
	AND I,80
	STA NY,WINDOW		;ELIMINATE TARGET
10$:	DEC DPTRG0
	BNE 12$			;TARGETS LEFT UP
	LDA I,020		;DELAY ONE HALF SECOND
	STA DPTRG0+1
	LDA LEDS+7		;TURN ON EXTRA BALL
	TAY
	ORA I,02
	STA LEDS+7
	TYA
	AND I,02
	BEQ 12$			;IF NO PREVIOUS EXTRA BALL
	LDA LEDS
	ORA I,02
	STA LEDS
12$:	INC PT1000		;3000 POINTS
	INC PT1000
	INC PT1000
	LDA Y
	LSR
	JSR COMP		;Y=-Y/2
	STA Y
	RTS

20$:	LDA X			;Y<0
	JSR DIVID2		;X=-X/2
	JSR COMP
	STA X
25$:	RTS

30$:	LDA VP
	CMP I,03
	BCC 40$			;IF VP<3
	LDA W3
	CMP I,DTRG0
	BNE 40$			;IF NOT DROP TARGET
35$:	LDA Y
	BMI 20$			;IF Y<0 DO NOT DROP TARGET
	LDA NY,WINDOW+2
	AND I,80
	STA NY,WINDOW+2
	JMP 10$

40$:	LDA HP
	BEQ DRPTG1		;IF HP>=1
	LDY I,1
	LDA W2
	CMP I,DTRG0
	BEQ 5$			;IF HIT DROP TARGET
50$:	LDA VP			;VP>=3
	CMP I,03
	BCC DRPTG1			;IF NOT HIT POSSIBLE
	LDA W4
	CMP I,DTRG0
	BEQ 35$			;IF HIT DROP TARGET
DRPTG1:	LDA W4			;CHECK DIAGONAL DROP TARGETS
	LDY I,1
	CMP I,DTRG1
	BNE 70$			;IF NO DROP TARGET
	LDA VP			;VP >= 2
	CMP I,02
	BCC 70$			;NO HIT
	CLC
	ADC HP			;HP+VP >= 8
	CMP I,08
	BCC 70$			;NO HIT
	LDA NY,WINDOW+2
	AND I,80
	STA NY,WINDOW+2		;DROP TARGET
	JSR DRPTG2		;ADD SCORRE AND BONUS
67$:	JSR COMPY		;Y=-Y
	LDA I,99$&0FF
	STA TEMP1
	LDA I,99$&0FF00/100
	STA TEMP1+1
	LDX I,0			;INSURE A NO-SCORE HIT
	JSR DFLCT		;DEFLECT LIKE UPPER RIGHT NEUTRAL WALL
	JMP COMPY		;Y=-Y

70$:	LDA W2
	CMP I,DTRG1
	BNE 80$			;IF NOT DROP TARGET
	LDA VP			;VP <= 5
	CMP I,06
	BCS 80$
	LDA HP			;HP >= 2
	CMP I,02
	BCC 80$
	LDA NY,WINDOW
	AND I,80
	STA NY,WINDOW		;DROP TARGET
72$:	JSR DRPTG2		;ADD SCORE & BONUS
	LDA X
	CLC
	ADC Y
	BVC 73$
	EOR I,80
73$:	BPL 67$			;IF X+Y >= 0 GOING INTO TARGET
	LDA Y
	BMI 75$			;IF BALL GOING DOWN
	JSR COMP		;IF Y>0 Y=Y/4
75$:	JSR DIVID4		;ELSE Y=Y/4
	STA Y
	LDA X
	BMI 77$			;IF X>0 X=X/4
	JSR COMP		;ELSE X=X/4
77$:	JSR DIVID4
	STA X
90$:	RTS

80$:	LDA W3
	LDY I,0
	CMP I,DTRG1
	BNE 90$			;IF NO DROP TARGET
	LDA VP			;VP >= 2
	CMP I,02
	BCC 90$
	LDA HP
	CMP I,06		;HP <= 5
	BCS 90$
	LDA NY,WINDOW+2
	AND I,80
	STA NY,WINDOW+2
	JMP 72$
	
99$:	.BYTE 0


DRPTG2:	LDA PT1000		;5000 PTS
	CLC
	ADC I,05
	STA PT1000
	LDA LEDS+2
	AND I,08
	BEQ 10$			;NO BONUS ADVANCE
	LDA I,01
	JSR ADDBON		;ADD TO BONUS
10$:	DEC DPTRG1
	BNE 20$			;TARGETS LEFT
	LDA I,20
	STA DPTRG1+1		;DELAY
	LDA LEDS+2
	ORA I,08
	STA LEDS+2		;SET BONUS LED ON
20$:	RTS


;ROLLC - ROLLOVER COLLISION DETECTION
ROLLC:	LDA VPOS+2
	BEQ 10$			;IF IN LOWER PORTION OF VIDEO
	LDA HPOS+1
	CLC
	ADC VPOS+1		;20 <= HPOS + VPOS <= 23
	CMP I,1E
	BCC 90$			;NO COLLISION
	CMP I,24
	BCS 90$			;NO COLLISION
	LDA ROLLOV
	BNE 5$			;IF ALREADY ON ROLLOVER
	LDA LEDS+6		;LIGHT ROLLOVER
	ORA I,04
	STA LEDS+6
	LDA LEDS+5
	LDX I,1
	AND I,04
	BNE 6$			;LIGHT 3 BONUS AND GIVE BONUS
	LDA LEDS+5		;LIGHT 2 BONUS LED
	ORA I,04
	STA LEDS+5
2$:	TXA
	JSR ADDBON		;ADD BONUS
3$:	LDY I,5			;5000 POINTS
4$:	TYA
	CLC
	ADC PT1000
	STA PT1000
	LDA I,05
	STA ROLLOV		;DEBOUNCE SWITCHES
5$:	RTS
	
90$:	JMP ROLLCO

6$:	LDY LEDS+7		;LIGHT 3 BONUS
	INX
	TYA
	ORA I,04
	STA LEDS+7
	TYA
	AND I,04
	BEQ 2$			;IF 2 BONUS
	INX
	BNE 2$			;IF 3 BONUS

10$:	LDX HPOS+1
	LDY VPOS+1
	CPY I,58
	BNE ROLLC1		;IF NOT LOWEST 3 ROLLOVERS
	CPX I,0E0
	BCS 90$			;IF NO ROLLOVER
	CPX I,0D8
	LDY I,3
	BCS 18$			;IF RIGHT ROLLOVER-3000 PTS
	CPX I,28
	BCS 90$			;NO ROLLOVER
	CPX I,18
	BCS 15$			;IF EXTRA BALL ROLLOVER
	LDA ROLLOV
	BNE 5$			;IF ALREADY ON ROLLOVER
	LDA LEDS
	AND I,02
	BEQ 4$			;IF NO SPECIAL LIT -3000 POINTS
	LDA SPEC
	BNE 4$			;IF SPECIAL ALREADY OBTAINED - 3000  POINTS
	DEC SPEC
	LDA A,OPTSW
	AND I,04
	BNE 60$			;NO FREE GAME
	INC $$CRDT
	BNE 4$
	
60$:	LDA I,08
	LDY I,03		;80000 PTS
	BNE 70$			;GO ADD 3000 PTS TOO

15$:	LDA ROLLOV
	BNE 5$			;IF ON ROLLOVER ALREADY
	LDA LEDS+7
	LDY I,05
	AND I,02
	BEQ 4$			;NO EXTRA BALL LIT
	LDA FREEBL
	BNE 4$			;ALREADY HAS FREE BALL
	DEC FREEBL
	LDA A,OPTSW
	AND I,02
	BEQ 80$			;EXTRA BALL ALLOWED
	LDA I,05
70$:	LDX PLAYR
	SED
	CLC
	ADC ZX,SCORE3		;50000 PTS
	STA ZX,SCORE3
	CLD
	BNE 85$
		
80$:	INC SAMPLR		;LIT SAME PLAYER SHOOTS AGAIN
85$:	JMP 4$
	
18$:	LDA ROLLOV
	BEQ 85$			;IF ON ROLLOVER
	RTS
	
ROLLCO:	LDA ROLLOV
	BEQ 10$			;IF ALREADY ZERO
	DEC ROLLOV		;DECREMENT FOR DEBOUNCE
10$:	RTS
	
ROLLC1:	CPY I,0C6
	BCS ROLLCO			;NO ROLLOVER
	CPY I,0C2
	BCS 30$			;IF POSSIBLY ON UPPER ROLLOVERS
	CPY I,7A
	BCS ROLLCO			;NO ROLLOVER
	CPY I,076
	BCC ROLLCO			;NO ROLLOVER
	LDY I,6
	CPX I,037
	BCC ROLLCO			;TO THE LEFT
	CPX I,03B
	BCC 22$			;HIT LOWER LEFT ROLLOVER
	CPX I,098
	BCC ROLLCO			;TO THE LEFT
	CPX I,09C
	BCS ROLLCO			;TO THE RIGHT
	DEY
22$:	LDA I,02
24$:	LDX ROLLOV
	BNE 5$			;ALREADY ON ROLLOVER
	INC ROLLOV
	ORA AY,LEDS		;TURN ON LED
	STA AY,LEDS
	LDA I,5
	CLC
	ADC PT10		;50 PTS
	STA PT10
	LDA I,01
	JSR ADDBON		;ADD BONUS
5$:	RTS

30$:	CPX I,067
	BCC ROLLCO			;TO THE LEFT
	LDY I,0
	LDA I,04
	CPX I,06B
	BCC 24$			;UPPER MIDDLE ROLLOVER
	CPX I,09B
	BCC ROLLCO			;TO THE LEFT
	CPX I,0A0
	BCS ROLLCO			;TO THE RIGHT
	INY
	LDA I,08
	BNE 24$			;LIGHT LED AND ADD SCORE


;COLID1 - RIGHT SIDE WALL COLLISION DETECTION
COLID1:	LDA VP			;VP >= 1
	BEQ 20$
	LDA W4
	CMP I,WL2
	BEQ 5$
	CMP I,WL3
	BEQ 5$
	CMP I,27
	BCC 10$			;NOT A FULL WALL
	CMP I,2A
	BCS 10$			;NOT A FULL WALL
5$:	TAX
	LDA HP			;HP+VP >= 4
	BEQ 20$			;2>=HP>=1
	CMP I,03
	BCS 20$
	CLC
	ADC VP
	CMP I,04
	BCC 20$
	BCS 30$			;HIT A WALL


10$:	LDX W3
	CPX I,SD0
	BNE 11$			;NO PARTIAL WALL
	LDA HP
	BEQ 15$			;HP=0
11$:	LDX W4
	CPX I,SD0
	BNE 20$
	LDA HP			;HP>=7
	CMP I,07
	BCC 20$
15$:	LDA VP			;VP >= 3
	CMP I,03
	BCS 30$			;A HIT
20$:	LDA W2
	CMP I,WL2
	BEQ 22$
	CMP I,WL3
	BEQ 22$
	CMP I,27
	BCC 25$			;NOT A WALL
	CMP I,2A
	BCS 25$			;NOT A WALL
22$:	TAX
	LDA HP			;VP-HP <= 4
	BEQ 25$			;2>=HP>=1
	CMP I,03
	BCS COLID2
	LDA VP
	SEC
	SBC HP
	CMP I,05
	BMI 30$			;A HIT
	BPL COLID2

25$:	LDX W1
	CPX I,SD0
	BNE 26$			;NOT A PARTIAL WALL
	LDA HP			;HP=0
	BEQ 27$
26$:	LDX W2
	CPX I,SD0
	BNE COLID2			;NOT A PARTIAL SIDE WALL
	LDA HP			;HP>=7
	CMP I,07
	BCC COLID2
27$:	LDA VP			;VP <= 5
	CMP I,06
	BCS COLID2
30$:	JSR DECHP		;MOVE BALL OVER
	LDA X
	BMI 90$			;IF GOING IN RIGHT DIRECTION
	LDA NUDGE
	JSR ADDX		;ADD NUDGE VALUE
	LDA X
	JSR COMP34		;CHANGE DIRECTION
	STA X
	CPX I,THP
	BNE 32$			;NOT AN ACTIVE WALL
	LDA I,-50
	JSR ADDX		;CHANGE VELOCITY FOR ACTIVE WALL
32$:	LDA WINDOW
	AND I,1F		;COLUMN 1C OR MORE
	CMP I,1C
	BCC 95$			;NOT PASSIVE HIT
35$:	LDA X
	JSR DIVID2		;X=X/2
	STA X
90$:	RTS

95$:	CPX I,SD0
	BNE 97$
	LDA VPOS+2
	BEQ 35$			;A PASSIVE HIT
97$:	LDA X
	BEQ 90$			;SPEED TOO SLOW
	CMP I,0F8
	BCS 90$			;IF SPEED TOO SLOW
	JMP PSCORE		;PLAYFIELD SCORING


;COLID2 - LEFT SIDE WALL COLLISION DETECTION
COLID2:	LDA VP			;VP >= 1
	BEQ 20$
	LDA W3
	TAX
	CMP I,WL0
	BEQ 5$
	CMP I,WL1
	BEQ 5$
	CMP I,27
	BCC 10$			;NOT FLAT SURFACE
	CMP I,2A
	BCS 10$			;NOT FLAT SURFACE
5$:	LDA HP			;HP-VP <= 4
	CMP I,08
	BCS 20$
	CMP I,06		;7>=HP>=6
	BCC 20$
	SEC
	SBC VP
	CMP I,05
	BPL 20$
	BMI 30$			;HIT A WALL

10$:	LDA HP
	CPX I,SD0
	BNE 13$			;4<=HP<=7
	CMP I,08
	BCS 13$
	CMP I,04
	BCS 15$
13$:	CPX I,SD1
	BNE 20$			;NOT A PARTIAL WALL
	CMP I,02		;HP<=1
	BCS 20$
15$:	LDA VP			;VP >= 3
	CMP I,03
	BCS 30$			;A HIT
20$:	LDA W1
	TAX
	CMP I,WL0
	BEQ 22$
	CMP I,WL1
	BEQ 22$
	CMP I,27
	BCC 25$			;NOT A WALL
	CMP I,2A
	BCS 25$			;NOT A WALL
22$:	LDA HP			;HP+VP <= 12
	CMP I,08
	BCS 90$
	CMP I,06		;7>=HP>=6
	BCC 90$
	CLC
	ADC VP
	CMP I,13.
	BCS 90$
	BCC 30$			;HIT A WALL

25$:	LDA HP
	CPX I,SD0
	BNE 26$			;4<=HP<=7
	CMP I,08
	BCS 26$
	CMP I,04
	BCS 27$
26$:	CPX I,SD1
	BNE 90$			;NOT A SIDE WALL
	CMP I,02
	BCS 90$
27$:	LDA VP			;VP <= 5
	CMP I,06
	BCS 90$
30$:	JSR INCHP		;MOVE BALL OVER
	LDA X
	BPL 90$			;IF GOING IN RIGHT DIRECTION
	LDA NUDGE
	JSR COMP
	JSR ADDX		;ADD NUDGE VALUE
	LDA X
	JSR COMP34		;CHANGE DIRECTION
	STA X
	CPX I,THP
	BNE 32$			;NOT AN ACTIVE WALL
	LDA I,50
	JSR ADDX		;CHANGE VELOCITY FOR ACTIVE WALL
32$:	LDA WINDOW
	AND I,1F
	CMP I,1C
	BCC 95$			;NOT A PASSIVE WALL IN SHOOTER ALLEY
35$:	LDA X
	JSR DIVID2		;X=X/2
	STA X
90$:	RTS

95$:	CPX I,SD1
	BNE 97$			;NOT PASSIVE WALL
	LDA VPOS+2
	BNE 97$
	LDA VPOS+1		;NOT PASSIVE WALL
	CMP I,70
	BCC 35$			;PASSIVE WALL
97$:	LDA X
	CMP I,08
	BCC 90$			;SPEED TO SLOW
	JMP PSCORE		;PLAYFIELD SCORING


;COLID3 - TOP WALL COLLISION DETECTION
COLID3:	LDA VP
	BEQ COLID4			;VP >=1
	CMP I,04
	BCS COLID4			;3>=VP
	LDA W3
	CMP I,WL0
	BEQ 5$
	CMP I,WL3
	BEQ 5$
	CMP I,27
	BCC 20$			;IF NO FLAT BOTTOMED SURFACE
	CMP I,2A
	BCS 20$			;IF NOT FLAT SURFACE
5$:	TAX
	LDA HP
	SEC			;HP-VP <= 4
	SBC VP
	CMP I,05
	BMI 30$
20$:	LDA W4
	CMP I,WL0
	BEQ 22$
	CMP I,WL3
	BEQ 22$
	CMP I,27
	BCC COLID4			;NO HIT POSSIBLE
	CMP I,2A
	BCS COLID4			;NO HIT POSSIBLE
22$:	TAX
	LDA HP
	BEQ COLID4			;HP>=1
	CLC			;HP+VP >= 4
	ADC VP
	CMP I,04
	BCC COLID4			;NO HIT POSSIBLE
30$:	JSR DECVP		;MOVE BALL OUT OF WALL
	LDA Y
	BMI 90$			;GOING IN RIGHT DIRECTION
	LDA NUDGE
	JSR ADDY		;ADD NUDGE EFFECT
	LDA Y
	JSR COMP34		;CHANGE Y COORD DIRECTION
	STA Y			;ASSUME A NEUTRAL HIT
	CPX I,THP
	BNE 35$			;IF NOT A THUMPER
	LDA I,-50
	JSR ADDY		;CHANGE Y FOR ACTIVE HIT
35$:	LDA Y
	BEQ 90$			;SPEED TOO SLOW
	CMP I,0F8
	BCS 90$			;SPEED TO SLOW
	JMP PSCORE		;PLAYFIELD SCORING
	
90$:	RTS

CKSUM1:	.BYTE 7E			;2400-27FF


;COLID4 - BOTTOM WALL COLLISION DETECTION
COLID4:	LDA W1
	CMP I,WL1
	BEQ 5$
	CMP I,WL2
	BEQ 5$
	CMP I,27
	BCC 20$			;NO COLLISION HERE
	CMP I,2A
	BCS 20$			;NO COLLISION HERE
5$:	TAX
	LDA VP
	CMP I,05		;VP >= 5
	BCC 20$
	CLC			;HP+VP <= 12
	ADC HP
	CMP I,13.
	BCC 30$			;WE HAVE A HIT
20$:	LDA W2
	TAX
	CMP I,WL1
	BEQ 22$
	CMP I,WL2
	BEQ 22$
	CMP I,27
	BCC 90$			;NOT A FLAT WALL
	CMP I,2A
	BCS 90$			;NOT A FLAT WALL
	LDA HP			;HP >= 1
	CMP I,01
	BCC 90$			;NO HIT
22$:	LDA VP			;VP-HP <= 4
	CMP I,05
	BCC 90$			;VP>=5
	SEC
	SBC HP
	CMP I,05
	BPL 90$
	LDA WINDOW+1
	CMP I,02
	BNE 30$			;237 IS SPECIAL CORNER TO ALLOW TO ENTER SMOOTHLY
	LDA WINDOW
	CMP I,37
	BNE 30$
	LDA HP
	CMP I,04
	BCC 90$			;PASS THRU CORNER
30$:	JSR INCVP		;VPOS=VPOS+1 TO GET OUT OF PLAYFIELD
	LDA Y
	BPL 90$			;GOING IN RIGHT DIRECTION
	LDA NUDGE
	JSR COMP
	JSR ADDY		;ADD NUDGE EFFECT
	LDA Y
	JSR COMP34		;CHANGE Y DIRECTION
	STA Y
	CPX I,THP
	BNE 35$			;NOT A THUMPER
	LDA I,50
	JSR ADDY		;CHANGE Y FOR ACTIVE HIT
35$:	LDA WINDOW
	CMP I,0DD
	BNE 95$			;NOT PASSIVE WALL
	LDA WINDOW+1
	CMP I,04
	BNE 95$
	LDA Y
	LSR
	STA Y			;Y=Y/2
90$:	RTS
	
95$:	LDA WINDOW+1
	CMP I,05
	BNE 97$			;5C3 IS ROUNDED ON TOP
	LDA WINDOW
	CMP I,0C2
	BCC 97$
	CMP I,0C3
	BNE 97$
	LDA I,4
	CPX W1
	BEQ 96$
	LDA I,-4
96$:	JMP ADDX

97$:	JMP PSCORE		;PLAYFIELD SCORING


;COLID5 - COLLISION CHECK WITH LOWER RIGHT 45 DEGREE ANGLES.
COLID5:	LDA W2
	CMP I,THP0
	BEQ 5$			;LOWER RIGHT 45 DEG ANGLE
	CMP I,TRG0
	BEQ 5$			;LOWER RIGHT 45 DEG ANGLE
	CMP I,WL0
	BNE 30$			;IF NOT IN THIS CORNER
5$:	TAX
	LDY I,1
	LDA HP			;HP-VP >= 3
	SEC
	SBC VP
	CMP I,03
	BMI 30$			;IF NO COLLISION
DFLCT0	=.
10$:	LDA W1
	AND I,3F
	CMP I,1C
	BEQ 15$			;IF ON FLIPPER TOO
	JSR INCVP		;MOVE BALL OUT OF BALL
15$:	JSR DECHP
	LDA I,99$&0FF
	STA TEMP1
	LDA I,99$&0FF00/100
	STA TEMP1+1
	JMP DFLCT		;DEFLECT BALL

30$:	LDA W1
	CMP I,THP0
	BEQ 35$			;IF THUMPER
	CMP I,TRG0
	BEQ 35$			;IF TARGET
	CMP I,WL0
	BNE 40$			;IF NOT A WALL
35$:	TAX
	LDY I,0
	LDA HP			;HP <= 5
	CMP I,06
	BCS 40$			;CAN'T BE A HIT
	LDA VP
	SEC
	SBC HP			;VP-HP <= 5
	CMP I,06
	BMI 10$			;ITS A HIT
40$:	LDA W4
	CMP I,THP0
	BEQ 45$			;IF THUMPER
	CMP I,TRG0
	BEQ 45$			;IF TARGET
	CMP I,WL0
	BNE 50$
45$:	TAX
	LDY I,3
	LDA HP			;HP >= 1
	BEQ 50$
	LDA VP			;VP >= 4
	CMP I,04
	BCC 50$			;CAN'T BE A HIT
	SEC
	SBC HP			;VP-HP <= 5
	CMP I,06
	BMI 10$			;A HIT
50$:	JMP COLID7		;TRY UPPER LEFT 45 DEG ANGLES


99$:	.WORD 51C		;PASSIVE COLLISION TABLE
	.WORD 4FB
	.WORD 4DA
	.WORD 4B9
	.WORD 498
	.WORD 477
	.WORD 456
	.WORD 435
	.WORD 414
	.WORD 69C
	.WORD 67B
	.WORD 65A
	.BYTE 0			;END OF LIST

;COLID6 - COLLISION WITH UPPER RIGHT 45 DEGREE ANGLES
COLID6:	LDA W4			;CHECK FOR UPPER RIGHT 45 DEG ANGLE
	CMP I,IWL1
	BEQ 5$
	CMP I,THP1
	BEQ 5$
	CMP I,TRG1
	BEQ 5$
	CMP I,WL1
	BNE 30$			;NO SUCH LUCK
5$:	TAX
	LDY I,3
	LDA HP			;HP+VP >= 11
	CLC
	ADC VP
	CMP I,11.
	BCC 30$			;NO HIT
DFLCT1	=.
10$:	CPX I,IWL1
	BEQ 12$			;IF IMAGINARY WALL
	JSR DECVP		;MOVE BALL OUT OF WALL
12$:	JSR COMPY		;Y=-Y
	LDA I,99$&0FF
	STA TEMP1
	LDA I,99$&0FF00/100
	STA TEMP1+1
	JSR DFLCT		;DEFLECT BALL
	JMP COMPY		;Y=-Y

30$:	LDA W3			;CHECK FOR ANGLE WALL
	CMP I,IWL1
	BEQ 35$
	CMP I,THP1
	BEQ 35$
	CMP I,TRG1
	BEQ 35$
	CMP I,WL1
	BNE 40$			;NO LUCK
35$:	TAX
	LDY I,2
	LDA HP			;HP <= 5
	CMP I,06
	BCS 40$
	LDA VP			;VP >= 1
	CMP I,01
	BCC 40$
	CLC			;HP+VP >= 3
	ADC HP
	CMP I,03
	BCS 10$			;A HIT
40$:	LDA W2			;CHECK FOR A WALL
	CMP I,IWL1
	BEQ 45$
	CMP I,THP1
	BEQ 45$
	CMP I,TRG1
	BEQ 45$
	CMP I,WL1
	BNE 50$
45$:	TAX
	LDY I,1
	LDA HP			;HP >= 1
	BEQ 50$
	CLC
	ADC VP			;HP+VP >= 3
	CMP I,03
	BCC 50$
	LDA VP			;VP <= 4
	CMP I,05
	BCC 10$			;A HIT
50$:	JMP COLID8		;TRY LOWER LEFT 45 DEG ANGLES


99$:	.WORD 4E8		;PASSIVE COLLISION TABLE
	.WORD 507
	.WORD 526
	.WORD 44A
	.WORD 469
	.WORD 488
	.WORD 4A7
	.WORD 4C6
	.WORD 4E5
	.WORD 504
	.WORD 523
	.WORD 265
	.WORD 246
	.WORD 227
	.BYTE 0			;END OF LIST


;COLID7 - COLLISION WITH UPPER LEFT 45 DEG ANGLE
COLID7:	LDA W3			;CHECK FOR WALL
	CMP I,THP2
	BEQ 5$
	CMP I,TRG2
	BEQ 5$
	CMP I,WL2
	BNE 30$			;NOT A WALL
5$:	TAX
	LDY I,2
	LDA VP			;VP-HP >= 3
	SEC
	SBC HP
	CMP I,03
	BMI 30$			;NOT A HIT
DFLCT2	=.
10$:	JSR DECVP		;MOVE BALL OUT OF WALL
	JSR COMPX		;X=-X
	JSR COMPY		;Y=-Y
	LDA I,99$&0FF
	STA TEMP1
	LDA I,99$&0FF00/100
	STA TEMP1+1
	JSR DFLCT		;DEFLECT BALL
	JSR COMPX		;X=-X
	JMP COMPY		;Y=-Y

30$:	LDA W1			;CHECK FOR A WALL
	CMP I,THP2
	BEQ 35$
	CMP I,TRG2
	BEQ 35$
	CMP I,WL2
	BNE 40$			;NOT A HIT
35$:	TAX
	LDY I,0
	LDA HP
	SEC
	SBC VP			;HP-VP <= 5
	CMP I,06
	BPL 40$
	LDA VP			;VP <= 4
	CMP I,05
	BCC 10$			;A HIT
40$:	LDA W4			;CHECK FOR A WALL
	CMP I,THP2
	BEQ 45$
	CMP I,TRG2
	BEQ 45$
	CMP I,WL2
	BNE 50$
45$:	TAX
	LDY I,3
	LDA VP			;VP >= 1
	BEQ 50$
	LDA HP			;HP >= 3
	CMP I,03
	BCC 50$
	SEC			;HP-VP <= 5
	SBC VP
	CMP I,06
	BMI 10$			;A HIT
50$:	RTS

99$:	.WORD 51A		;PASSIVE COLLISION TABLE
	.WORD 4F9
	.WORD 4D8
	.WORD 4B7
	.WORD 496
	.WORD 475
	.WORD 454
	.BYTE 0			;END OF LIST


;COLID8 - LOWER LEFT 45 DEGREE ANGLE COLLISION
COLID8:	LDA W1			;CHECK FOR A WALL
	CMP I,THP3
	BEQ 5$
	CMP I,TRG3
	BEQ 5$
	CMP I,WL3
	BNE 30$
5$:	TAX
	LDY I,0
	LDA HP			;HP+VP <= 5
	CLC
	ADC VP
	CMP I,06
	BCS 30$
DFLCT3	=.
10$:	LDA W2
	AND I,3F
	CMP I,1C
	BEQ 15$			;IF ON FLIPPER
	JSR INCVP		;MOVE BALL OUT OF WALL
15$:	JSR INCHP
	JSR COMPX		;X=-X
	LDA I,99$&0FF
	STA TEMP1
	LDA I,99$&0FF00/100
	STA TEMP1+1
	JSR DFLCT		;DEFLECT BALL
	JMP COMPX		;X=-X

30$:	LDA W2			;CHECK FOR WALL
	CMP I,THP3
	BEQ 35$
	CMP I,TRG3
	BEQ 35$
	CMP I,WL3
	BNE 40$			;NO WALL
35$:	TAX
	LDY I,1
	LDA HP			;HP >= 3
	CMP I,03
	BCC 40$
	CLC
	ADC VP			;HP+VP <= 13
	CMP I,14.
	BCC 10$			;A HIT
40$:	LDA W3			;CHECK FOR A WALL
	CMP I,THP3
	BEQ 45$
	CMP I,TRG3
	BEQ 45$
	CMP I,WL3
	BNE 50$
45$:	TAX
	LDY I,2
	LDA VP			;VP  >= 4
	CMP I,04
	BCC 50$
	CLC			;VP+HP <= 13
	ADC HP
	CMP I,14.
	BCC 10$			;A HIT
50$:	RTS

99$:	.WORD 501		;PASSIVE COLLISION
	.WORD 4E2
	.WORD 4C3
	.WORD 4A4
	.WORD 485
	.WORD 466
	.WORD 447
	.WORD 428
	.WORD 409
	.WORD 524
	.WORD 505
	.WORD 4E6
	.WORD 4C7
	.WORD 4A8
	.WORD 489
	.WORD 46A
	.WORD 7A3
	.WORD 7C2
	.WORD 7E1
	.BYTE 0			;END OF LIST

CKSUM2:	.BYTE 0A5			;2800-2BFF


	.SBTTL FLIPPER COLLISION DETECTION
;FLIPC - FLIPPER COLLISION DETECTION
;
;ENTRY(X) = FLIPPER NUMBER (0=LEFT, 1=RIGHT)
FLIPC:	STX CFLIP
	JSR FLIPC1		;DETECT COLLISION
	BEQ 33$			;ACTION TAKEN OR NO HIT
	LDX CFLIP
	STA TEMP1
	INC ZX,FLPFLG		;FLAG A COLLISION
	CPY I,21.
	BCS 30$			;OFF EDGE OF FLIPPER
	LDA TEMP1
	BPL 5$
	JMP 50$			;HIT ON BOTTOM OF FLIPPER

5$:	JSR INCVP		;MOVE BALL OUT OF FLIPPER
	LDA ZX,FLIPDR
	BMI 15$			;IF FLIPPER GOING DOWN
	BNE 20$			;IF FLIPPER MOVING
	LDA ZX,FLIP
	BNE 10$			;IF FLIPPER IN UP POSITION
	JSR COMPX		;X=-X
	JSR DFLCTF		;DEFLECT OFF FLIPPER
	JMP COMPX		;X=-X

10$:	JSR DFLCTF		;DEFLECT OFF FLIPPER
33$:	RTS

15$:	JMP 65$
20$:	TYA			;YY/4 (0 TO 5)
	LSR
	LSR
	CLC
	ADC VPOS+1		;MOVE BALL OUT OF
	STA VPOS+1		;FLIPPER MORE
	LDA I,70
	STA Y			;Y=70
	LDA I,04
	STA TEMP1+1
	LDA ZX,FLIP
	CMP I,18
	LDA I,-40
	BCS 23$			;IF UPPER FLIPPER POSITION
	LDA I,06
	STA TEMP1+1
	LDA I,-10
23$:	STA TEMP1
	LDA X
	JSR DIVID4
	CLC
	ADC TEMP1		;ADD X/4
	BVC 24$
	LDA I,-7F
24$:	CLC			;YY*C+BASE(DEPENDING ON FLIPPER POSITION)
	ADC TEMP1+1
	BVS 28$
	DEY
	BPL 24$
25$:	STA X
	JMP INCVP		;GET BALL OUT OF FLIPPER
	
28$:	ASL
	LDA I,07F
	BCS 25$			;USE MAX VALUES
	LDA I,081
	BNE 25$

30$:	CPX I,0
	BNE 31$			;IF RIGHT FLIPPER
	JSR INCHP		;MOVE BALL OUT OF FLIPPER
	JMP 36$
	
31$:	JSR DECHP		;MOVE BALL OUT OF FLIPPER
36$:	LDA X
	CMP I,-20
	BMI 35$			;IF X< -20
	CMP I,30
	BPL 32$			;ANGLE IS GOOD ENOUGH
	LDA Y
	BPL 37$
	JSR COMP
37$:	JSR DIVID2
	LDY ZX,FLIPDR
	BEQ 38$			;IF FLIPPER STATIONARY
	CLC
	ADC I,10
	BVS 39$			;IF OVER MAX NOW
38$:	CLC
	ADC X
	BVC 32$
39$:	LDA I,7F
32$:	CMP I,10
	BPL 43$			;IF X >- 10
	LDA I,10		;X MUST BE AT LEAST 10
43$:	STA X			;X=X+Y/2 Y=Y/2 IF FLIPPER STATIONARY
	LDA Y			;X=X+Y/2+10 Y=Y/2 IF FLIPPER MOVING
	CMP I,20
	BCC 34$			;NOT ENOUGH TO CHANGE
	JSR DIVID2
	STA Y
34$:	RTS

35$:	LDA X			;X=-X/2 Y=Y
	JSR DIVID2
	JSR COMP
	STA X
	RTS

65$:	LDA Y
	JSR DIVID4		;Y=-Y/4 X=X
	JSR COMP
	STA Y
	RTS

50$:	JSR DECVP		;MOVE B ALL OUT OF FLIPPER
	JSR DECVP
	LDA ZX,FLIPDR
	BNE 60$			;IF FLIPPER MOVING
	LDA ZX,FLIP
	BNE 55$			;IF FLIPPER IS UP
	JSR COMPY		;Y=-Y
	JSR DFLCTF		;DEFLECT OFF FLIPPER
	JMP COMPY

55$:	JSR COMPX		;X=-X
	JSR COMPY		;Y=-Y
	JSR DFLCTF		;DEFLECT OFF FLIPPER
	JSR COMPX		;X=-X
	JMP COMPY		;Y=-Y

60$:	LDA ZX,FLIPDR
	BPL 65$			;IF FLIPPER GOING UP
	TYA
	STA TEMP1
	ASL
	ASL
	CLC
	ADC TEMP1		;Y=-5YY
	JSR COMP
	STA Y
	RTS


;FLIPC1 - DETECT FLIPPER COLLISION
;
;EXIT(A) = + IF TOP OF FLIPPER
;    (A) = - IF BOTTOM OF FLIPPER
;    (A) = 0 IF ACTION TAKEN ALREADY OR NO HIT
;    (Y) = YY VALUE (0 TO 22.)
FLIPC1:	LDY I,16.		;Y=16.+
	LDX W1
	CPX I,1F
	BNE 2$
	JSR HP2VP		;HP/2+VP<=4
	CMP I,05
	BCC 20$			;HIT TOP OF FLIPPER
2$:	CPX I,26
	BNE 4$
	LDA HP			;HP+VP<=10
	CLC
	ADC VP
	CMP I,11.
	BCC 20$			;HIT TOP OF FLIPPER
4$:	LDX W3
	CPX I,1F
	BNE 6$
	LDA HP			;HP-VP<=2
	SEC
	SBC VP
	CMP I,03
	BMI 30$			;HIT ON BOTTOM
6$:	CPX I,26
	BNE 8$
	LDA VP			;VP-HP>=2
	SEC
	SBC HP
	CMP I,02
	BPL 30$			;HIT ON BOTTOM
8$:	LDY I,8			;Y=8+
	CPX I,1D
	BNE 10$
	JSR HP24VP		;(HP+2)/4+VP>=2
	CMP I,02
	BCS 30$			;HIT ON BOTTOM
10$:	CPX I,24
	BNE 12$
	LDA VP
	SEC
	SBC HP
	CMP I,07
	BPL 30$			;HIT ON BOTTOM
12$:	LDX W1
	CPX I,1D
	BNE 14$
	JSR HP2VP		;HP/2+VP<=8
	CMP I,09
	BCC 20$			;HIT ON TOP
14$:	CPX I,1E
	BNE 16$
	LDA HP			;HP+VP<=1
	CLC
	ADC VP
	CMP I,02
	BCC 20$			;HIT ON TOP
16$:	CPX I,24
	BNE 18$
	LDA I,01		;VP-(HP-1)/2>=0
	SEC
	SBC HP
	JSR DIVID2
	CLC
	ADC VP
	BPL 30$			;HIT ON BOTTOM
18$:	CPX I,25
	BNE FLIPC2
	JSR VPHP24		;VP-(HP+2)/4<=6
	CMP I,07
	BPL FLIPC2			;IF NOT HIT ON TOP
20$:	LDX I,1
25$:	JMP FLIPC3

30$:	LDX I,-1
	BNE 25$


FLIPC2:	LDY I,0			;Y=0+
	LDX W2
	CPX I,1E
	BNE 42$
	JSR HP2VP		;HP/2+VP 55
	CMP I,06
	BCC 20$			;HIT ON TOP
42$:	CPX I,1D
	BEQ 20$			;HIT ON TOP
	CPX I,1C
	BNE 44$
	LDA HP			;HP=8
	CMP I,08
	BNE 44$
	LDA VP
	CMP I,06		;VP<=5
	BCS 44$
	LDA I,0
	LDX I,1
	JMP FLIPC4		;HIT ON TOP

44$:	CPX I,24
	BEQ 30$			;HIT ON BOTTOM
	CPX I,25
	BNE 46$
	JSR VPHP24		;VP-(HP+2)/4<=5
	CMP I,06
	BMI 20$			;HIT ON TOP
46$:	LDX W4
	CPX I,1D
	BNE 48$
	JSR HP24VP		;(HP+2)/4+VP>=4
	CMP I,04
	BCS 30$			;HIT ON BOTTOM
48$:	CPX I,24
	BNE 50$
	LDA VP			;VP>=4
	CMP I,04
	BCC 50$
	LDA HP
	CMP I,05
	BCC 60$			;DOWN
	SEC
	SBC VP
	CMP I,02
	BMI 30$			;HIT ON BOTTOM
50$:	CPX I,1B
	BNE 70$
	LDA HP			;HP+VP>=10
	CLC
	ADC VP
	CMP I,10.
	BCC 70$
	JSR DFLCT1		;DEFLECT AT 45 DEGREE ANGLE
55$:	LDA I,0			;FLAG NO HIT OR ACTION TAKEN ALREADY
	RTS

20$:	JMP 92$

30$:	JMP 97$

60$:	LDA Y
	BMI 55$			;GOING DOWN ALREADY
	JSR COMP
	STA Y
	LDA I,0			;ACTION TAKEN
	RTS

70$:	LDY I,14.		;Y=14.+
	LDX W1
	CPX I,22
	BEQ 85$			;HIT ON TOP OR BOTTOM
	CPX I,23
	BEQ 90$			;HIT ON TOP IF VP <= 4
	LDX W3
	CPX I,22
	BEQ 95$			;HIT ON BOTTOM IF VP>=4
	LDY I,6			;Y=6+
	CPX I,20
	BEQ 95$			;HIT ON BOTTOM IF VP>=4
	LDX W1
	CPX I,20
	BEQ 85$			;HIT ON TOP OR BOTTOM
	CPX I,21
	BEQ 90$			;HIT ON TOP IF VP <= 4
	LDY I,-2		;Y=-2+
	LDX W2
	CPX I,20
	BEQ 85$			;HIT ON TOP OR BOTTOM
	CPX I,21
	BEQ 90$			;HIT ON TOP IF VP<=4
	LDX W4
	CPX I,20
	BNE 55$			;NO HITS
	BEQ 95$			;HIT ON BOTTOM IF VP>=4

85$:	LDX CFLIP
	LDA ZX,FLIPDR
	BMI 97$			;HIT ON BOTTOM-FLIPPER GOING DOWN
	BPL 92$			;HIT ON TOP-FLIPPER GOING UP

90$:	LDA VP
	CMP I,05
	BCS 55$			;NO HIT
92$:	LDX I,1			;HIT ON TOP WITH VP<=4
	BNE FLIPC3

95$:	LDA VP
	CMP I,04
	BCC 55$			;NO HIT
97$:	LDX I,-1			;HIT ON BOTTOM WITH VP>=4
FLIPC3:	TYA
	CLC
	ADC HP
FLIPC4:	TAY			;YY
	BPL 10$
	LDY I,0
10$:	CPY I,23.
	BCC 20$			;IF HIT
	LDX I,0			;FLAG NO HIT
20$:	TXA			;+1 OR -1
	RTS



	.SBTTL PLAYFIELD SCORING ROUTINE
;PSCORE - PLAYFIELD SCORING ROUTINE
;
;ENTRY(X) = PLAYFIELD VALUE
;USES A,X,Y
PSCORE:	LDA COLFLG
	BNE 5$			;IF SCORED ALREADY THIS ITERATION
	INC COLFLG		;ONLY ONE SCORE PER ITERATION
	LDY VPOS+1
	TXA
	AND I,3F
	LDX HPOS+1
	CMP I,27
	BCC 5$			;IF PART OF FLIPPER
	CMP I,THP
	BNE 10$			;IF NOT A SLINGSHOT
	LDA VPOS+2
	BNE 14$			;NOT A SLINGSHOT
	CPY I,0A9
	BCS 14$			;MUST BE THUMPER
	INC PT10		;30 PTS
	INC PT10
	INC PT10
5$:	RTS

10$:	CMP I,THP0
	BEQ 14$			;A THUMPER
	CMP I,THP1
	BNE 20$			;NOT A THUMPER
14$:	CPX I,50
	LDX I,0
	BCC 16$			;IF LOWER LEFT THUMPER
	LDX I,1
16$:	LDA ZX,LITTHP
	BNE 18$			;IF THUMPER LIT
	INC PT100		;100 PTS
	RTS

18$:	INC PT1000		;1000 PTS
	RTS

20$:	CMP I,TRG
	BEQ 22$			;TARGET HIT
	CMP I,TRG0
	BEQ 22$			;TARGET HIT
	CMP I,TRG1
	BNE 40$			;NO TARGET HIT
22$:	CPX I,20
	BCC 30$			;IF LEFT TARGETS
	CPX I,40
	BCS 26$			;IF UPPER TARGETS
	INC PT1000		;3000 PTS
	INC PT1000
	INC PT1000
	LDY I,04
	LDX I,04
	BNE 38$			;TURN ON LED

26$:	CPX I,80
	LDY I,03
	BCS 28$			;RIGHT MOST TARGET
	CPX I,64
	INY
	BCS 28$			;MIDDLE TARGET
	INY			;LEFT TARGET
28$:	TYA
	TAX
	LDY I,08
	BNE 36$			;TURN ON LED AND ADD SCORE

30$:	CPY I,0B4
	LDX I,01
	BCC 32$			;IF LOWER LEFT TARGET
	INX
	CPY I,0C8
	BCC 32$			;IF MIDDLE TARGET
	INX
32$:	LDY I,04
36$:	LDA PT100		;500 PTS
	CLC
	ADC I,05
	STA PT100
38$:	TYA			;TURN ON LED
	ORA ZX,LEDS
	STA ZX,LEDS
	LDA LEDS+1
	AND LEDS+2
	AND LEDS+3
	AND I,04
	BEQ 37$			;IF ALL THREE TARGETS LITE THUMPER
	INC LITTHP
	LDA I,3B
	STA A,705
37$:	LDA LEDS+3
	AND LEDS+4
	AND LEDS+5
	AND I,08
	BEQ 39$			;IF ALL THREE TARGETS LIT-LITE THUMPER
	INC LITTHP+1
	LDA I,3B
	STA A,7EE
39$:	RTS

40$:	LDA WINDOW
	AND I,1F
	CMP I,1C
	BCS 48$			;IF BALL IS IN ALLEY RETURN
	LDA VPOS+2
	BNE 50$			;IF IN UPPER SEGMENT
	CPY I,0E4
	BCS 55$			;CHECK FOR 50 PTS
	CPY I,88
	BNE 45$			;CANNOT BE 50 POINTS
	CPX I,45
	BCC 45$			;MUST BE 10 PTS
	CPX I,8B
	BCC 58$			;50 PTS
45$:	INC PT10		;10 PTS
48$:	RTS

50$:	CPX I,3D
	BCC 48$			;CAN'T BE 10 PTS
	CPX I,93
	BCC 45$			;10 POINTER
	CPY I,04
	BCS 48$			;CANNOT BE 50 POINTS
55$:	CPX I,0B8
	BCC 48$			;NO 50 PTS
58$:	LDA PT10
	CLC
	ADC I,05
	STA PT10		;50 PTS
	RTS
	.SBTTL ADD TO BONUS
;ADDBON - ADD TO BONUS
;
;ENTRY(A) = AMOUNT TO ADD TO BONUS
ADDBON:	CLC
	ADC BONUS
	CMP I,19.
	BCC 10$
	LDA I,19.
10$:	STA BONUS		;NEW BONUS
	TAX
	LDA LEDS+2
	AND I,0FD		;CLEAR LED
	CPX I,10.
	BCC 20$			;IF LESS THAN 10
	TXA
	SEC
	SBC I,10.
	TAX
	LDA LEDS+2		;TURN ON LED 10
	ORA I,02
20$:	STA LEDS+2
	LDA LEDS+1
	AND I,0FD
	CPX I,09
	BCC 22$			;IF NO 9
	ORA I,02
22$:	STA LEDS+1
	LDA LEDS
	AND I,0FE
	CPX I,08
	BCC 24$			;IF NO 8
	ORA I,01
24$:	STA LEDS
	STX TEMP1		;SAVE SCORE
	LDX I,07
30$:	LDA ZX,LEDS
	AND I,0FE
	CPX TEMP1
	BCC 32$			;IF WE ARE TO LITE LED
	BNE 34$			;DO NOT LITE LED
32$:	ORA I,01
34$:	STA ZX,LEDS
	DEX
	BNE 30$			;LOOP TIL 1
	RTS
	
	
	.SBTTL ADD TO SCORE AND GENERATE NOISE
;ADDSCR - ADD TO SCORE AND GENERATE NOISE
ADDSCR:	LDA CNTRL
	BNE ADDSC5		;IF NOISE BEING GENERATED
	LDA OUT2D
	AND I,40
	BEQ 12$			;IF BELL ON
	LDA I,0
	LDY BONG
	BEQ 12$			;NO BONG
	DEC BONG
	EOR I,20		;TURN BONG ON
	BNE 14$			;ALWAYS

12$:	LDY BELL
	BEQ 14$			;NO BELL
	DEC BELL
	EOR I,40
14$:	STA TEMP1
	LDA OUT2D
	AND I,9F
	EOR I,40		;4D=BELL OFF
	EOR TEMP1
	STA OUT2D
	STA A,OUT2		;SET BELL/BONG
	LDA TEMP1
	BNE ADDSC5		;NOISE ON
	LDA NPLAYR
	BEQ ADDSC5		;IF IN ATTRACT
	LDX PLAYR
	LDY I,01
	LDA BONS2X
	BMI 20$				;IF BONUS X2 OBTAINED
	LDA REPLAY
	BMI 30$				;IF REPLAY ATTAINED
	LDA SPEC
	BMI 40$			;IF SPECIAL
	LDA FREEBL
	BPL ADDSC3		;NO FREE BALL
	STY FREEBL
	LDY I,<7-1>*2
	BNE ADDSC1
	
20$:	STY BONS2X
	LDY I,<5-1>*2
	BNE ADDSC1
	
30$:	STY REPLAY
	LDY I,<6-1>*2
	BNE ADDSC1
	
40$:	STY SPEC
	LDY I,<7-1>*2
ADDSC1:	CLD
	LDA AY,ADDSC4
	LDX AY,ADDSC4+1
	JSR SMUSIC		;START MUSIC
	LDX PLAYR
ADDSC2:	LDA ZX,FRPLY1
	BNE ADDSC5		;IF ALREADY GOT BONUS
	LDA ZX,SCORE3
	CMP RPLY1
	BCC ADDSC5		;NO FREE GAME
	DEC REPLAY		;NOISE GENERATION
	INC ZX,FRPLY1		;FLAG SCORE OBTAINED
	INC $$CRDT		;ADD A FREE GAME
ADDSC5:	RTS


ADDSC3:	LDA PT1000
	BEQ 20$			;NO 1000'S
	DEC PT1000
10$:	SED
	LDY I,<1-1>*2
	LDA I,10
	CLC
	BNE 32$

20$:	LDA PT100
	BEQ 30$			;NO 100'S
	SEC
	SBC I,10.
	BCC 25$			;IF LESS THAN A THOUSAND
	STA PT100
	BCS 10$			;ALWAYS

25$:	DEC PT100
	SED
	LDY I,<2-1>*2
	LDA I,01
	CLC
	BNE 32$

30$:	LDA PT10
	BEQ 50$			;NO 10'S
	DEC PT10
	LDY I,<3-1>*2
	SED
	LDA ZX,SCORE1
	CLC
	ADC I,10
	STA ZX,SCORE1
	LDA I,0
32$:	ADC ZX,SCORE2
	STA ZX,SCORE2
	LDA I,0
34$:	ADC ZX,SCORE3
	STA ZX,SCORE3
	JMP ADDSC1
	
	
50$:	LDA ENDBAL
	BEQ ADDSC2		;IF BALL HAS NOT DRAINED
	LDA BONUS
	BEQ ADDSC2		;NO BONUS
	LDA BON2X
	BNE 52$			;IF SECOND TIME FOR THIS BONUS
	LDA LEDS+4
	AND I,02
	BEQ 54$			;IF NOT 2X BONUS
	INC BON2X
	BNE 56$
	
52$:	DEC BON2X
54$:	LDA I,-1
	JSR ADDBON
	LDX PLAYR
56$:	SED
	LDY I,<4-1>*2
	LDA I,30
	CLC
	BNE 32$
	
ADDSC4:	.WORD NOISE1		;1000 POINTS
	.WORD NOISE2		;100 POINTS
	.WORD NOISE3		;10 POINTS
	.WORD NOISE4		;BONUS COUNTDOWN
	.WORD NOISE5		;2X BONUS
	.WORD NOISE6		;FREE PLAY
MATCHB:	.WORD NOISE7		;SPECIAL EXTRA BALL

CKSUM3:	.BYTE 1F			;2C00-2FFF


	.SBTTL CHANGE VELOCITIES IN X AND Y DIRECTIONS
;ADDX - CHANGE X DIRECTION
;
;ENTRY(A) = CHANGE TO BE MADE TO X
ADDX:	STA TEMP1
	LDA I,0			;NO Y CHANGE
	STA TEMP1+1
	JMP ADDXY


;ADDY - CHANGE Y DIRECTION
;
;ENTRY(A) = CHANGE TO MAKE TO Y
ADDY:	STA TEMP1+1
	LDA I,0
	STA TEMP1		;NO X CHANGE


;ADDXY - ADD TO X AND Y DIRECTION
;
;ENTRY(TEMP1) = CHANGE FOR X (MAX OF 40)
;(TEMP1+1)    = CHANGE FOR Y (MAX OF 40)
;
ADDXY:	LDA X
	BMI 10$			;IF X IS POSITIVE
	JMP ADDXY1

10$:	JSR COMPX		;X=-X
	LDA TEMP1
	JSR COMP		;COMPLEMENT CHANGE
	STA TEMP1
	JSR ADDXY1
	JMP COMPX

ADDXY1:	LDA Y
	BMI 10$
	JMP ADDXY2

10$:	JSR COMPY		;Y=-Y
	LDA TEMP1+1
	JSR COMP		;COMPLEMENT CHANGE
	STA TEMP1+1
	JSR ADDXY2
	JMP COMPY

ADDXY2:	LDA X
	CLC
	ADC TEMP1
	STA X
	LDA Y
	CLC
	ADC TEMP1+1
	STA Y
	LDA TEMP1
	ORA TEMP1+1
	BMI 40$			;NO NEGATIVE NUMBERS
10$:	LDA Y
	CLC
	ADC X			;X+Y
	CMP I,0C0
	BCC 20$			;IF NOT EXCEEDING MAX
	DEC X			;X=X-2
	DEC X
	DEC Y			;Y=Y-2
	DEC Y
	JMP 10$			;TRY AGAIN

20$:	LDA X
	BPL 25$
	LDA I,7F
	STA X
25$:	LDA Y
	BPL 30$
	LDA I,7F
30$:	STA Y
40$:	RTS
	
	
;ATLITE-ATTRACT MODE FLASHING LITES
ATLITE:	LDA FRAME
	AND I,038
	BEQ 2$
1$:	RTS
				;IF NOT ON EIGHT SECOND BOUNDARY
2$:	LDA LEDS
	EOR I,04		;FLASH ROLLOVERS
	STA LEDS
	LDA LEDS+1
	EOR I,08
	STA LEDS+1
	LDA LEDS+5
	EOR I,02
	STA LEDS+5
	LDA LEDS+6
	EOR I,06
	STA LEDS+6
	BIT FRAME
	BVS 1$			;NOT QUARTER SECOND
	LDA LEDS+7
	EOR I,04		;FLASH 3 BONUS
	STA LEDS+7
	LDA LEDS+5
	EOR I,04		;FLASH 2 BONUS
	STA LEDS+5
	LDA LEDS+3
	AND I,08
	STA TEMP1+1
	LDA LEDS+1
	AND I,04
	STA TEMP1
	LDX I,02
10$:	LDA ZX,LEDS+1		;STEP THRU TARGETS ONE AT A TIME
	AND I,04
	TAY
	LDA ZX,LEDS+1
	AND I,0FB
	ORA TEMP1
	STA ZX,LEDS+1
	STY TEMP1
	LDA ZX,LEDS+3
	AND I,08
	TAY
	LDA ZX,LEDS+3
	AND I,0F7
	ORA TEMP1+1
	STA ZX,LEDS+3
	STY TEMP1+1
	DEX
	BPL 10$
	LDA FRAME
	BMI 90$			;IF NOT HALF SECOND
	LDA LEDS+7
	EOR I,02		;FLASH EXTRA BALL
	STA LEDS+7
	LDA LEDS
	EOR I,02		;FLASH SPECIAL
	STA LEDS
	LDA LEDS+4
	EOR I,02		;FLASH BOUBLE BONUS
	STA LEDS+4
	LDA LEDS+2
	EOR I,08		;FLASH DROP TARGETS BONUS
	STA LEDS+2
	LDA LEDS+4
	EOR I,04
	STA LEDS+4		;FLASH 2/3/ BONUS TARGET
	LDA BONUS
	CMP I,19.
	BCS 80$			;IF BONUS AT MAX
	LDA I,01
	JMP ADDBON		;ADD ONE TO BONUS
	
80$:	LDA I,-19.
	JSR ADDBON
90$:	RTS


	
	.SBTTL	CHECK PLUNGER AND ENABLE NMI
;CHKPLG-CHECK PLUNGER AND ENABLE NMI
CHKPLG:	LDA VPOS+2
	BNE 30$			;IF IN UPPER PORTION
	LDA HPOS+1
	CMP I,0E8
	BNE 30$			;NOT IN SHOOTING ALLEY
	LDA VPOS+1
	CMP I,40
	BCS 30$			;NOT IN POSITION
	LDA PLUNG+1
	BNE 20$			;OK. HIT BALL WITH THIS VELOCITY
	LDA OUT1D
	AND I,10
	BNE 10$			;NMI IS ON
	LDA OUT1D
	ORA I,10
	STA OUT1D
	STA A,OUT1		;TURN NMI ON
10$:	RTS

20$:	CLC
	ADC I,0F
	BPL 25$			;IF UNDER MAX VELOCITY
	LDA I,7F
25$:	CMP I,48
	BCS 28$			;IF NUMBER LARGE ENOUGH
	LDA I,48
28$:	SBC I,40
	ASL			;SCALED PLUNGER VALUE (10-7E)
	STA Y
	LDA I,0
	STA SAMPLR		;CLEAR SAME PLAYER LED
	LDA LEDS+3
	AND I,0FD
	STA LEDS+3
	STA PLUNG+1
	RTS

30$:	LDA OUT1D
	AND I,0EF
	STA OUT1D		;TURN OFF NMI
	STA A,OUT1
	RTS


	.SBTTL 45 DEGREE ANGLE REFLECTION
;DFLCT - DEFLECT THE BALL FROM A LOWER RIGHT 45 DEGREE ANGLE
;
;ENTRY(X) = PLAYFIELD VALUE HIT
;(Y) = INDEX FOR WHICH WORD COLLISION OCCURED (0-3)
;(TEMP1,TEMP1+1) = ADDRESS OF PASSIVE TABLE
DFLCT:	LDA X
	SEC
	SBC Y
	STA TEMP3		;SAVE X-Y FOR LATER
	BVC 2$			;NO SIGNED OVERFLOW
	EOR I,80
2$:	BPL 5$			;GOING IN WRONG DIRECTION
40$:	RTS			;X<Y
	
5$:	LDA WINDOW
	STA TEMP2
	LDA WINDOW+1
	STA TEMP2+1
	CPY I,02
	BCC 3$			;IF IN LOWER WINDOW
	LDA WINDOW+2
	STA TEMP2
	LDA WINDOW+3
	STA TEMP2+1
3$:	TYA
	AND I,01
	BEQ 4$			;IF ON LEFT
	INC TEMP2
4$:	LDY I,0
	STY TEMP3+1		;FLAG FOR PASSIVE/NEUTRAL HIT
	DEY
	TXA
	PHA			;SAVE PLAYFIELD VALUE
6$:	INY
	LDA NY,TEMP1
	BEQ 8$			;IF END OF LIST
	INY
	CMP TEMP2
	BNE 6$			;NO COMPARE
	LDA NY,TEMP1
	CMP TEMP2+1
	BNE 6$			;NO COMPARE
	STA TEMP3+1
8$:	LDA Y			;0<Y<=-10
	BPL 28$
	CMP I,0F0
	BCC 28$
	LDA TEMP2+1
	CMP I,06
	BEQ 24$
	CMP I,04		;472 IS PARTIAL PASSIVE
	BNE 28$
	LDA TEMP2
	CMP I,72
	BNE 28$
22$:	STA TEMP3+1		;FLAG AS PASSIVE
	JMP 28$

24$:	LDA TEMP2
	CMP I,83		;683 IS PARTIAL PASSIVE
	BEQ 22$
	CMP I,0B7
	BEQ 22$			;6B7 IS PARTIAL PASSIVE
28$:	LDA NUDGE		;ADD NUDGE EFFECT
	LSR
	JSR ADDX
	LDA NUDGE
	LSR
	JSR COMP
	JSR ADDY
	LDA X
	SEC
	SBC Y
	STA TEMP1		;X-Y (0 TO FE)
	BVC 1$
	EOR I,80
1$:	BMI 40$			;GOING IN RIGHT DIRECTION
	LDA I,0
	STA TEMP1+1
	LDX TEMP3+1
	BEQ 7$			;IF NOT PASIVE HIT
	LDA TEMP1
	ASL
	ROL TEMP1+1
	CLC
	ADC TEMP1		;3(X-Y)
	STA TEMP1		;USE 16 BIT ARITHMETIC
	BCC 7$
	INC TEMP1+1
7$:	ROR TEMP1+1		;3(X-Y)/8 OR (X-Y)/8
	ROR TEMP1
	ROR TEMP1+1
	ROR TEMP1
	LSR TEMP1
	LDA TEMP1
	CLC
	ADC Y
	TAX			;X=Y+3(X-Y)/8 FOR PASSIVE
	LDA X			;X=Y+(X-Y)/8 FOR NEUTRAL
	SEC
	SBC TEMP1
	STA Y			;Y=X-3(X-Y)/8 FOR PASSIVE
	STX X			;Y=X-(X-Y)/8 FOR NEUTRAL X
	PLA
	TAX
	AND I,3F		;TURN THP2 TO THP1 AND THP3 TO THP0
	CMP I,THP0
	BEQ 10$			;IF ACTIVE HIT
	CMP I,THP1
	BNE 30$			;NO ACTIVE HIT
10$:	LDA I,-38
	JSR ADDX		;NEW X=X-1C
	LDA I,38
	JSR ADDY		;NEW Y=Y+1C
	JMP 48$
	
30$:	LDA TEMP3+1
	BNE 50$			;IF PASSIVE HIT
	LDA TEMP3
	CMP I,10
	BCC 50$			;NOT FAST ENOUGH
	LDA W1
	CMP I,5C
	BEQ 50$			;DO NOT GIVE POINTS FOR NEXT TO FLIPPER
48$:	JMP PSCORE		;PLAYFIELD SCORING

50$:	RTS


;DFLCTF - DEFLECT OFF OF FLIPPER
;
;EXTRY (X)=FLIPPER INDEX
DFLCTF:	LDA I,0
	STA ZX,FLPFLG			;FLAG AS IF NOT COLLISION
	LDA X
	JSR DIVID2
	TAX			;SAV X/2
	SEC
	SBC Y
	BVC 2$			;X >= 2Y ELSE GOING IN RIGHT DIRECTION
	EOR I,80
2$:	BMI 10$			;GOING IN RIGHT DIRECTION ALREADY
	LDY I,0
	LDA Y
	BPL 4$			;IF Y>0
	LDY I,0FF
4$:	STY TEMP1+1		;USE 16 BIT ARITHMETIC
	ASL
	STA TEMP1		;2 Y
	LDY I,0
	LDA X
	BPL 6$
	LDY I,0FF
6$:	ASL			;2X
	CLC
	ADC TEMP1		;2X+2Y
	STA TEMP1
	TYA
	ADC TEMP1+1
	STA TEMP1+1
	LDA X
	CLC
	ADC TEMP1
	STA TEMP1		;3X+2Y
	TYA
	ADC TEMP1+1
	STA TEMP1+1
	ROR TEMP1+1		;NEW X=(3X+2Y)/4
	ROR TEMP1
	ROR TEMP1+1
	ROR TEMP1
	LDA TEMP1
	STA X
	STX Y			;NEW Y=X/2
10$:	RTS



	.SBTTL DISPLAY FLIPPERS
;DISFLP - DISPLAY FLIPPERS
;
;ENTRY(X) = 1 FOR RIGHT FLIPPER ELSE 0 FOR LEFT FLIPPER
;(TEMP1,TEMP1+1) = DESTINATION FOR FLIPPER
DISFLP: LDA NPLAYR
	BEQ 10$			;IF IN ATTRACT USE DOWN FLIPPERS
	LDA ZX,FLIP
	AND I,38		;0 FOR 0-7, 8 FOR 8-F, 10 OR MORE
	CMP I,18
	BCC 10$			;IF TOO LARGE
	LDA I,10
10$:	STA TEMP2
	TXA
	ASL
	ASL
	ORA TEMP2
	TAX
	LDY I,0
	LDA AX,99$
	STA NY,TEMP1		;LOWER LEFT CORNER OF PICTURE
	INX
	LDY I,20
	LDA AX,99$
	STA NY,TEMP1		;UPPER LEFT CORNER OF PICTURE
	LDY I,1
	INX
	LDA AX,99$
	STA NY,TEMP1		;LOWER RIGHT CORNER
	LDY I,21
	INX
	LDA AX,99$
	STA NY,TEMP1
	RTS

99$:	.BYTE 1D,1E,1F,0	;LEFT   "     "        "
	.BYTE 5F,0,5D,5E	;RIGHT DOWN FLIPPER PICTURES
	.BYTE 20,21,22,23	;LEFT   "     "        "
	.BYTE 62,63,60,61	;RIGHT MIDDLE "        "
	.BYTE 24,25,0,26	;LEFT   "     "        "
	.BYTE 0,66,64,65	;RIGHT UP     "        "


	.SBTTL UPDATE BALL POSITION
GETPOS:	LDA X
	ASL			;0 TO FE FOR POSITIVE NUMBERS
	CLC
	ADC HPOS
	STA HPOS
	LDA I,0
	LDX X
	BPL 5$			;IF POSITIVE NUMBER
	LDA I,0FF		;ADD SIGN EXTENSION
5$:	ADC HPOS+1
	STA HPOS+1
	AND I,07
	STA HP
	LDA Y
	ASL			;0 TO FE FOR POSITVE NUMBERS
	CLC
	ADC VPOS
	STA VPOS
	LDA I,0
	LDX Y
	BPL 25$			;IF POSITIVE NUMBER
	LDA I,0FF
25$:	ADC VPOS+1
	STA VPOS+1
	LDA I,0
	LDX Y
	BPL 30$			;IF POSITIVE NUMBER
	LDA I,0FF		;SIGN EXTENSION
30$:	ADC VPOS+2
	STA VPOS+2
	BPL 40$			;IF NOT OFF SCREEN
	INC ENDBAL		;END BALL
	LDA I,01		;MOVE BALL OFF SCREEN
	STA VPOS+2
	LDA I,40
	STA VPOS+1
	LDA I,0			;NO VELOCITY
	STA X
	STA Y
	RTS

40$:	LDA VPOS+1
	AND I,07
	STA VP
	LDA I,0
	JMP GETWDW		;GET WINDOW ADDRESS


	.SBTTL CONVERT FROM COORDINATES TO PLAYFIELD ADDRESS.
;GETWDW - GET PLAYFIELD ADDRESS FROM COORDINATES
;
;ENTRY(HPOS,VPOS) = BALLS POSITION COORDINATES
; (A)=OFFSET FROM BALL POSITION
GETWDW:	CLC
	ADC VPOS+1
	AND I,0F8
	TAX
	LDA I,1
	ADC VPOS+2
	STA WINDOW+1		;1 OR 2
	LDA HPOS+1
	LSR
	LSR
	LSR
	STA WINDOW
	TXA
	ASL
	ROL WINDOW+1		;2 TO 4
	ASL
	ROL WINDOW+1		;4 TO 8
	ORA WINDOW
	STA WINDOW		;LSB OF WINDOW
	LDA WINDOW+1
	CMP I,08
	BCC 10$			;IF IN LOWER PORTION OF VIDEO
	SEC
	SBC I,06
	STA WINDOW+1
10$:	LDA WINDOW
	CLC
	ADC I,20
	STA WINDOW+2
	LDA I,0
	ADC WINDOW+1
	CMP I,08
	BCC 15$			;IF NO OVERLAP
	LDA I,02
15$:	STA WINDOW+3
	LDY I,0
	LDA NY,WINDOW
	AND I,7F
	STA W1			;SAVE WINDOW CHARACTERS
	LDA NY,WINDOW+2
	AND I,7F
	STA W3
	INY
	LDA NY,WINDOW
	AND I,7F
	STA W2
	LDA NY,WINDOW+2
	AND I,7F
	STA W4
	RTS
	
	
	.SBTTL	CHANGES DUE GRAVITY AND FRICTION
GRAV:	LDA FRAME
	AND I,18
	BEQ 10$			;NOT EVERY FRAME
	LDA I,-1
	JSR ADDY		;CHANGE Y COORDINATES
10$:	LDA FRAME
	AND I,078
	BNE 20$			;NOT EVERY FRAME
	LDX Y
	BEQ 15$			;IF VELOCITY=0
	BMI 12$			;IF GOING DOWN
	DEX
	DEX
12$:	INX			;CHANGE Y DIRECTION FOR FRICTION
	STX Y
15$:	LDX X
	BEQ 25$			;IF VELOCITY =0
	BMI 17$			;IF GOING LEFT
16$:	DEX
	DEX
17$:	INX			;CHANGE X DIRECTION FOR FRICTION
	STX X
20$:	RTS

25$:	LDA HPOS+1
	CMP I,0E7
	BCS 20$			;IF IN ALLEY
	LDA W1
	AND I,3F
	CMP I,1C
	BEQ 20$			;IF FLIPPER
	LDA W2
	AND I,3F
	CMP I,1C
	BEQ 20$			;IF FLIPPER
	BNE 16$			;ROLL TO LEFT


	.SBTTL MATCH - MATCH FEATURE
;MATCH - MATCH FEATURE
MATCH:	LDA A,OPTSW
	AND I,04
	BNE 90$			;DO NOT ALLOW FREE GAME
	LDA A,MATCHA
	LDX A,MATCHA+1
	JSR SMUSIC		;START MUSIC
10$:	JSR WAIT		;WAIT FOR VBLANK
	LDA MATCHN
	LSR
	LSR
	LSR
	LSR
	JSR HEX
	STA A,462		;MSB DIGIT
	LDA I,70		;ZERO
	STA A,463
	LDA CNTRL
	BNE 10$			;WAIT FOR NOISE TO STOP
	LDY NPLAYR
	DEY
20$:	LDA AY,SCORE1		;CHECK FOR FREE GAME
	CMP MATCHN
	BNE 25$			;NO MATCH
	INC $$CRDT		;INCREASE CREDIT - WAIT WILL CHECK FOR MAX
	LDA A,MATCHB
	LDX A,MATCHB+1
	JSR SMUSIC		;START MUSIC
25$:	DEY
	BPL 20$			;LOOP FOR ALL PLAYERS
30$:	JSR WAIT		;WAIT FOR VBLANK
	LDA CNTRL
	BNE 30$			;LOOP UNTIL NOISE STOPS
90$:	RTS

MATCHA:	.WORD NOISE8		;MATCH COUNTDOWN


	.SBTTL RESET BALL
RESBAL:	LDA I,0
	STA X			;NO VELOCITY
	STA Y
	STA PLUNG+1		;CLEAR ANY NMI GLITCH
	STA HPOS		;SET POSITION
	STA VPOS
	STA VPOS+2
	STA DPTRG0		;RESET DROP TARGETS
	STA DPTRG0+1
	STA DPTRG1
	STA DPTRG1+1
	STA ENDBAL		;CLEAR BALL MISSED FLAG
	STA BONUS
	STA LITTHP
	STA LITTHP+1
	STA A,705		;CLEAR LIT THUMPER
	STA A,7EE
	STA BONS2X		;CLEAR SOUND FLAGS
	STA REPLAY
	STA SPEC
	STA FREEBL
	LDX I,07
10$:	STA ZX,LEDS
	DEX
	BPL 10$			;CLEAR ALL LEDS
	LDA I,0E8
	STA HPOS+1
	LDA I,38
	STA VPOS+1
	RTS


	.SBTTL RESET DROP TARGETS
RESTRG:	LDA DPTRG0
	BNE 10$			;IF AT LEAST ONE TARGET UP
	LDA DPTRG0+1
	BNE 8$			;DO NOT RESET YET
	LDA I,5
	STA DPTRG0		;RESET NUMBER OF TARGETS
	LDA I,DTRG0
	STA A,629
	STA A,62B
	STA A,62D
	STA A,62F
	STA A,631
	BNE 10$

8$:	DEC DPTRG0+1		;DECREMENT COUNTER
10$:	LDA DPTRG1
	BNE 20$			;IF AT LEAST ONE TARGET UP
	LDA DPTRG1+1
	BNE 18$			;DO NOT RESET YET
	LDA I,4
	STA DPTRG1		;RESET NUMBER OF TARGETS
	LDA I,DTRG1
	STA A,218
	STA A,7F9
	STA A,7DA
	STA A,7BB
	RTS

18$:	DEC DPTRG1+1		;DECREMENT COUNTER
20$:	RTS


	.SBTTL DISPLAY SCORE ROUTINE
;SCORE - DISPLAY SCORE
;
;ETNRY(A) = LSB OF STARTING ADDRESS OF SCORE
;     (X) = SCORE NUMBER TO BE DISPLAYED
;USES(TEMP1,TEMP1+1),(TEMP2,TEMP2+1)
SCORE:	STA TEMP1
	LDA I,04
	STA TEMP1+1
	LDA NPLAYR
	BEQ 20$			;IF IN ATTRACT MODE
	CPX NPLAYR
	BCS 18$			;DO NOT DISPLAY THIS SCORE
	CPX PLAYR
	BNE 20$			;NOT CURRENT PLAYER
	LDA OUT1D
	AND I,10
	BEQ 20$			;IF NMI OFF DON'T FLASH
	LDA FRAME
	AND I,80
	BNE 20$			;DON'T BLINK NOW
	LDY I,5
	LDA I,0
10$:	STA NY,TEMP1		;CLEAR SCORE
	DEY
	BPL 10$
18$:	RTS

20$:	LDA I,0
	TAY
	STA TEMP2		;ZERO SUPPRESS FLAG
	LDA ZX,SCORE3
	JSR SCOR1
	LDA ZX,SCORE2
	JSR SCOR1
	LDA I,1
	STA TEMP2		;NO ZERO SUPPRESS
	LDA ZX,SCORE1


;SCOR1 - DISPLAY 2 DIGITS OF SCORE WITH ZERO SUPPRESSION
;
;ENTRY(A) = DIGITS FOR CONVERSION
;(TEMP2)  = 0 FOR ZERO SUPPRESS
;(TEMP1,TEMP1+1) = DISTINATION FOR SCORE
;     (Y) = INDEX
;EXIT(Y)  = INDEX +2
;(TEMP2)  = 0 IF NO ZERO SUPPRESSION
SCOR1:	STA TEMP2+1
	LSR
	LSR
	LSR
	LSR
	BNE 2$			;IF NOT ZERO
	LDA TEMP2
	BEQ 4$			;IF ZERO SUPPRESSING
	LDA I,70		;DISPLAY ZERO
	BNE 4$

2$:	STA TEMP2
	JSR HEX
4$:	STA NY,TEMP1
	INY
	LDA TEMP2+1
	AND I,0F
	BNE 12$			;IF NOT ZERO
	LDA TEMP2
	BEQ 14$			;IF ZERO SUPPRESSING
	LDA I,70
	BNE 14$

12$:	STA TEMP2
	JSR HEX
14$:	STA NY,TEMP1
	INY
	RTS

CKSUM4:	.BYTE 0A3			;3000-33FF
	.SBTTL VBLANK PROCESSING ROUTINE
;WAIT - WAIT FOR END OF NEXT IRQ AND CHECK FOR VBLANK
WAIT:	LDA FRAMCK
	BNE 2$			;CANNOT BE IN SAME VBLANK
1$:	LDA A,INPUT2
	BMI 1$			;WAIT FOR END OF VBLANK
2$:	LDA A,INPUT2
	BPL 2$			;WAIT UNTIL NEXT VBLANK
	LDA I,0
	STA FRAMCK
	STA A,WTCHDG		;WATCHDOG
	LDY I,1
4$:	LDA NY,WINDOW+6
	AND I,7F
	STA NY,WINDOW+6
	LDA NY,WINDOW+4
	AND I,7F
	STA NY,WINDOW+4
	DEY
	BPL 4$
	LDA I,2C		;DISPLAY FLIPPER BEFORE ADDING BALL BITS
	STA TEMP1
	LDA I,04
	STA TEMP1+1
	LDX I,0
	JSR DISFLP		;DISPLAY FLIPPER
	LDA I,50
	STA TEMP1
	LDX I,01
	JSR DISFLP		;DISPLAY FLIPPER
	LDA I,45
	STA TEMP1
	LDA I,06
	STA TEMP1+1
	LDX I,0
	JSR DISFLP		;DISPLAY FLIPPER
	LDA I,74
	STA TEMP1
	LDX I,1
	JSR DISFLP		;DISPLAY FLIPPER
	LDA I,3			;PICTURE IS 3H TOO SOON
	JSR GETWDW		;GET NEW WINDOW
	LDY I,01
6$:	LDA NY,WINDOW
	ORA I,80
	STA NY,WINDOW
	LDA NY,WINDOW+2
	ORA I,80
	STA NY,WINDOW+2
	DEY
	BPL 6$
	LDA HPOS+1		;SET BALL POSITION
	AND I,07		;0 TO 7
	JSR COMP		;0 TO -7
	AND I,0F
	ASL
	ASL
	ASL
	ASL
	STA TEMP1
	LDA VPOS+1
	AND I,07
	TAX
	LDA AX,WAITA		;GET VERTICAL POSITION
	ORA TEMP1
	STA A,BALPOS		;WAIT UNTIL END OF VBLANK TO PREVENT PROBLEMS
	LDA WINDOW		;SET OLD WINDOW
	STA WINDOW+4
	LDA WINDOW+1
	STA WINDOW+5
	LDA WINDOW+2
	STA WINDOW+6
	LDA WINDOW+3
	STA WINDOW+7
	LDA FRAME
	AND I,0F8
	BNE 9$			;LEAVE OFF
	LDA SAMPLR
	BEQ 9$			;NO EXTRA BALL
	LDA LEDS+3		;ALTERNATE ON/OFF
	EOR I,02
	STA LEDS+3
9$:	LDA NPLAYR
	BEQ 10$			;IF IN ATTRACT MODE
	LDA BALL
	JSR HEX
	STA A,4BB		;DISPLAY BALL NUMBER
10$:	LDA $$CRDT
	CMP I,0A
	BCC 12$			;IF CREDIT UNDER MAX
	LDA I,09
	STA $$CRDT
12$:	JSR HEX
	STA A,4A2
WAIT1:	LDX I,0
	LDA I,21
	JSR SCORE		;DISPLAY PLAYER 1 SCORE
	INX
	LDA I,01
	JSR SCORE		;DISPLAY PLAYER 2 SCORE
	INX
	LDA I,37
	JSR SCORE		;DISPLAY PLAYER 3 SCORE
	INX
	LDA I,17
	JSR SCORE		;DISPLAY PLAYER 4 SCORE
	LDA A,INPUT2		;CHECK NUDGE SWITCH
	ROL
	ROL
	ROL NUDGSW
	LDA NUDGSW
	CMP I,0FE		;7 FRAMES OFF 1 ON
	BNE 10$
	LDA I,1C
	STA NUDGE
10$:	LDA NUDGE		;DECREMENT NUDGE VALUE
	BEQ 20$
	DEC NUDGE
20$:	LDA A,INPUT1		;CHECK START SWITCH
	ROL
	ROL
	ROL
	ROL
	ROL STRTSW
	LDA STRTSW
	CMP I,03		;6 FRAMES OFF 2 ON
	BNE 80$			;SWITCH OFF
	LDA $$CRDT
	BEQ 80$			;IF NO CREDIT
	LDA NPLAYR
	BEQ 30$			;IF NO PLAYERS YET
	CMP I,04
	BCS 80$			;IF 4 PLAYERS ALREADY
	LDA BALL
	CMP I,01
	BNE 80$			;IF NOT BALL 1
30$:	DEC $$CRDT
	INC NPLAYR
	LDA I,18
	STA BELL		;SOUND BELL
80$:	LDY $$CRDT		;UPDATE LOCKOUT COIL
	LDA OUT1D
	ORA I,08		;ALLOW COINS
	CPY I,09
	BCC 44$			;NOT AT MAX CREDITS YET
	AND I,0F7
44$:	STA OUT1D
	STA A,OUT1
	BIT A,INPUT1
	BVS 90$				;NO SELF-TEST
85$:	JMP STEST
	
90$:	LDA MATCHN		;INCREMENT MATCH NUMBER
	SED
	CLC
	ADC I,10
	STA MATCHN
	CLD
	LDA ZERO
	ORA BLITZ
	BNE 85$			;OOOOPS- SOMEONE BLITZED RAM
	JMP ADDSCR		;ADD SCORE & GENERATE NOISES

WAITA:	.BYTE 0D,0C,0B,0A,09,00,0F,0E	;VERTICAL BALL POSITIONS IN WINDOW

	.SBTTL MESSAGE ROUTINE
;MESS - MESSAGE ROUTINE
;
;ENTRY(A) = BITS 0-6 MESSAGE NUMBER (0,1,2...)
;	  = BIT 7 =1 TO BLANK MESSAGE
;		  =0 TO WRITE MESSAGE
;EXIT(Y) = INDEX FOR NEXT CHARACTER
;(TEMP2,TEMP2+1) = ADDRESS OF DESTINATION
;
MESS:	ASL
	ROR TEMP3		;SAVE BLANK/WRITE FLAG
	TAY
	ASL
	ASL
	STA TEMP2		;8*MESSAGE #
	LDA A,OPTSW		;GET LANGUAGE NUMBER
	AND I,30
	LSR
	LSR
	LSR
	ORA TEMP2		;FORM INDEX FOR LANGUAGE
	TAX
	LDA AX,MESG
	STA TEMP1
	LDA AX,MESG+1
	STA TEMP1+1
	LDA AY,POSM		;GET MESSAGE POSITION
	STA TEMP2
	LDA AY,POSM+1
	STA TEMP2+1
	LDY I,0
10$:	LDA NY,TEMP1
	BEQ 50$			;END OF MESSAGE
	CMP I,20
	BEQ 20$			;IF A BLANK USE 0
	LDX TEMP3
	BPL 30$			;IF WRITE MESSAGE
20$:	LDA I,0			;BLANK MESSAGE
30$:	ORA I,40		;INVERTED CHARACTER SET
	STA NY,TEMP2
	INY
	BPL 10$
50$:	RTS

MESG:	.WORD MESS0
	.WORD MESS0G
	.WORD MESS0F
	.WORD MESS0S
	.WORD MESS1
	.WORD MESS1G
	.WORD MESS1F
	.WORD MESS1S
	.WORD MESS2
	.WORD MESS2G
	.WORD MESS2F
	.WORD MESS2S
	.WORD MESS3
	.WORD MESS3G
	.WORD MESS3F
	.WORD MESS3S
	.WORD MESS4
	.WORD MESS4G
	.WORD MESS4F
	.WORD MESS4S
	.WORD MESS5
	.WORD MESS5G
	.WORD MESS5F
	.WORD MESS5S
	.WORD MESS6
	.WORD MESS6G
	.WORD MESS6F
	.WORD MESS6S

POSM:	.WORD 768		;STARTING PLAYFIELD POSITION
	.WORD 768
	.WORD 768
	.WORD 768
	.WORD 529
	.WORD 5E8
	.WORD 6E7

MESS0:	.ASCIZ /  FREE PLAY/
MESS0G:	.ASCIZ / FREISPIEL/
MESS0F:	.ASCIZ /PARTIE GRATUITE/
MESS0S:	.ASCIZ /JUEGO GRATIS/
MESS1:	.ASCIZ /1 COIN 2 PLAYERS/
MESS1G:	.ASCIZ /1 MUENZE 2 SPIELER/
MESS1F:	.ASCIZ /1 PIECE 2 JOUEURS/
MESS1S:	.ASCIZ /1 MONEDA 2 JUGADORES/
MESS2:	.ASCIZ /1 COIN 1 PLAYER/
MESS2G:	.ASCIZ /1 MUENZE 1 SPIELER/
MESS2F:	.ASCIZ /1 PIECE 1 JOUEUR/
MESS2S:	.ASCIZ /1 MONEDA 1 JUGADOR/
MESS3:	.ASCIZ /2 COINS 1 PLAYER/
MESS3G:	.ASCIZ /2 MUENZEN 1 SPIELER/
MESS3F:	.ASCIZ /2 PIECES 1 JOUEUR/
MESS3S:	.ASCIZ /2 MONEDAS 1 JUGADOR/
MESS4:  .ASCIZ /  HIGH SCORE/
MESS4G:	.ASCIZ /BESTE PUNKTZAHL/
MESS4F:	.ASCIZ /MEILLEUR SCORE/
MESS4S:	.ASCIZ /MAYOR PUNTAJE/
MESS5:	.ASCIZ /  BONUS FOR/
MESS5G:	.ASCIZ /VERLAENGERT FUER/
MESS5F:	.ASCIZ /JEU PROLONGE A/
MESS5S:	.ASCIZ /JUGADA EXTRA DE/
MESS6:	.ASCIZ /  PUSH START/
MESS6G:	.ASCIZ /STARTKNOEPFE DRUECKEN/
MESS6F:	.ASCIZ /APPUYER SUR START/
MESS6S:	.ASCIZ / PULSAR START/
CKSUM5:	.BYTE 6B			;3400-37FF
	.SBTTL	INITIALIZE PLAYFIELD
INIT:	LDA I,0
	TAY			;Y=0
	STA TEMP2
	LDA I,4
	STA TEMP2+1
	LDA I,FLD0&0FF
	STA TEMP1
	LDA I,FLD0&0FF00/100
	STA TEMP1+1
	JSR INIT1		;SETUP LOWER PART OF PLAYFIELD
	LDA I,0
	STA TEMP2
	LDA I,2
	STA TEMP2+1
	LDA I,FLD1&0FF
	STA TEMP1
	LDA I,FLD1&0FF00/100
	STA TEMP1+1
;	JMP INIT1		;SETUP UPPER PART OF PLAYFIELD
	
	
;INIT1-INITIALIZE FROM PLAYFIELD MAP
;
;ENTRY (TEMP1,TEMP1+1)=SOURCE ADDRESS
;	(TEMP2,TEMP2+1)=DESTINATION ADDRESS
;	(Y)=0
;USES	A,X,(TEMP1,TEMP1+1),(TEMP2,TEMP2+1)
INIT1:	STA A,WTCHDG
5$:	LDX I,0
	LDA NY,TEMP1
	BEQ 25$			;IF END OF LIST
	BPL 10$			;IF NOT MULTIPLE SPACES
	AND I,7F
	TAX
	DEX
	LDA I,0			;REPEAT SPACES
10$:	STA NY,TEMP2
	INC TEMP2
	BNE 15$
	INC TEMP2+1
15$:	DEX
	BPL 10$			;MULTIPLE PIECES
	INC TEMP1
	BNE 5$
	INC TEMP1+1
	BNE 5$
	
25$:	RTS
	
;PLAYFIELD FROM 400-7FF
;ZERO TERMINATES LIST
;80+X REPRESENTS X CONSECUTIVE SPACES
FLD0:	.BYTE 88,WL,WL3,8A,WL0,WL,8A				;400
	.BYTE 87,WL,WL3,82,1B,87,WL2,81				;420
	.BYTE WL0,WL,89
	.BYTE 86,WL,WL3,82,WL1,1C,86,5B,WL,WL2,81		;440
	.BYTE WL0,WL,88
	.BYTE 85,WL,WL3,82,WL1,WL3,87,5C,WL,WL,WL2,81		;460
	.BYTE WL0,WL,87
	.BYTE 84,WL,WL3,82,WL1,WL3,89,WL0,WL,WL,WL2,81,WL0,WL	;480
	.BYTE 86
	.BYTE 83,WL,WL3,82,WL1,WL3,8B,WL0,WL,WL,WL2,81,WL0,WL	;4A0
	.BYTE 85
	.BYTE 82,WL,WL3,82,WL1,WL3,8D,WL0,WL,WL,WL2,81,WL0,WL	;4C0
	.BYTE WL,WL,WL,WL
	.BYTE 81,WL,WL3,82,WL1,WL3,81,WL1,8D,WL0,WL,WL,WL2,81	;4E0
	.BYTE WL0,WL,81,WL,WL
	.BYTE WL,WL3,82,WL1,WL3,81,WL1,THP,8E,WL0,WL,WL,WL2	;500
	.BYTE 81,WL0,81,WL,WL
	.BYTE WL,SD1,81,WL1,WL3,81,WL1,WL,THP,8F,THP		;520
	.BYTE WL,WL,81,SD0,81,WL,WL
	.BYTE WL,SD1,SD0,WL,SD1,SD0,WL,WL,WL3,8F,THP	;540
	.BYTE WL,WL,SD1,SD0,81,WL,WL
	.BYTE WL,SD1,SD0,WL,SD1,SD0,WL,THP,90		;560
	.BYTE THP,WL,WL,SD1,SD0,81,WL,WL
	.BYTE WL,SD1,SD0,WL,SD1,SD0,WL,THP,90		;580
	.BYTE THP,WL,WL,SD1,SD0,81,WL,WL
	.BYTE WL,SD1,SD0,WL,SD1,SD0,WL,WL3,90			;5A0
	.BYTE WL0,WL,WL,SD1,SD0,81,WL,WL
	.BYTE WL,SD1,81,WL,81,SD0,WL3,92			;5C0
	.BYTE WL0,WL3,81,SD0,81,WL,WL
	.BYTE WL,SD1,9A						;5E0
	.BYTE WL1,81,WL,WL
	.BYTE WL,WL2,99,WL1,WL,81,WL,WL			;600
	.BYTE WL,WL,WL2,86,DTRG0,81,DTRG0,81,DTRG0,81		;620
	.BYTE DTRG0,81,DTRG0,88,WL1,WL,WL,81,WL,WL
	.BYTE WL,WL,WL,WL2,1B,84,WL0,WL,WL,WL,WL,WL		;640
	.BYTE WL,WL,WL3,88,WL0,WL,WL,81,WL,WL
	.BYTE WL,WL,WL,WL,1C,85,WL0,WL,WL,WL,WL,WL		;660
	.BYTE WL3,85,5B,WL1,WL2,82,WL0,WL,81,WL,WL	
	.BYTE WL,WL,WL,WL3,87,WL0,THP,THP,THP,WL3,86,5C		;680
	.BYTE WL,WL,WL2,82,WL0,81,WL,WL
	.BYTE WL,WL,TRG3,94,WL0,WL,WL,WL2,81,SD0,81,WL,WL	;6A0
	.BYTE WL,WL3,96,WL0,WL,WL,81,SD0,81,WL,WL		;6C0
	.BYTE WL,83,THP1,THP,THP2,92,WL0,WL3,81,SD0		;6E0
	.BYTE 81,WL,WL
	.BYTE TRG,83,THP,WL,THP,95				;700
	.BYTE SD0,81,WL,WL
	.BYTE WL,83,THP0,THP,THP3,95,WL1,81,WL,WL	;720
	.BYTE WL,WL2,9A,WL0,81,WL,WL				;740
	.BYTE WL,WL,TRG2,99,SD0,81,WL,WL			;760
	.BYTE WL,WL,WL,WL2,98,SD0,81,WL,WL			;780
	.BYTE WL,WL,WL,WL3,97,DTRG1,WL1,81,WL,WL		;7A0
	.BYTE WL,WL,WL3,8A,THP1,THP,THP2,8A,DTRG1,WL1		;7C0
	.BYTE WL,81,WL,WL
	.BYTE WL,WL3,82,WL1,TRG2,87,THP,WL,THP,89		;7E0
	.BYTE DTRG1,WL1,WL,WL,81,WL,WL
	.BYTE 0					;END OF LIST
	
;PLAYFIELD FROM 200-29F
	
FLD1:	.BYTE WL,82,WL1,WL,WL3,87,THP0,THP,THP3			;200
	.BYTE 88,DTRG1,WL1,WL,WL,WL,81,WL,WL
	.BYTE WL,82,WL,WL3,82,WL1,WL,WL,WL2			;220
	.BYTE 87,WL1,WL,WL,WL2,82,WL1,WL,WL,WL,WL3,81,WL,WL
	.BYTE WL,85,WL1,WL,WL,WL,WL,TRG2,85		;240
	.BYTE TRG1,WL,WL,WL,WL,WL2,IWL1,86,WL,WL
	.BYTE WL,WL2,83,WL1,WL,WL,WL,WL,WL,WL,WL2,83		;260
	.BYTE WL1,WL,WL,WL,WL,WL,WL,WL2,85,WL1,WL,WL
	.BYTE WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,TRG,WL	;280
	.BYTE WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL,WL
	.BYTE 0					;END OF LIST
	.SBTTL MISC ROUTINES


;ABS - ABSOLUTE VALUE AND COMPLEMENT.
;
;ENTRY (A)	= VALUE TO BE USED
;EXIT (A)	= ABSOLUTE VALUE
ABS:	BPL COMP1			;IF POSITIVE OR ZERO
COMP:	EOR I,0FF
	CLC
	ADC I,1
COMP1:	RTS


;COMPX - COMPLEMENT X
;
;EXIT(A) = NEW X
COMPX:	LDA X
	JSR COMP
	STA X
	RTS


;COMPY - COMPLEMENT Y
;
;EXIT(A) = NEW Y
COMPY:	LDA Y
	JSR COMP
	STA Y
	RTS


;COMP34 - COMPLEMENT 3/4 OF ACCUMULATOR
;
;ENTRY(A) = VALUE TO BE USED
;EXIT(A)  = 3/4 VALUE
COMP34:	JSR DIVID2		;A/2
	STA TEMP4
	JSR DIVID2		;A/4
	CLC
	ADC TEMP4		;3A/4
	JMP COMP		;-3A/4
	
	
;DIVID4-DIVIDE SIGN INTEGER BY 4
;
;ENTRY (A) =SIGNED INTEGER
;EXIT (A) =INTEGER/4.
DIVID4:	CLC
	BPL 2$			;IF POSITIVE
	SEC
2$:	ROR			;DIVIDE BY 2
DIVID2:	CLC
	BPL 2$			;IF POSITIVE
	SEC
2$:	ROR
	RTS


HP2VP:	LDA HP			;HP/2+VP
	LSR
	CLC
	ADC VP
	RTS

HP24VP:	LDA HP			;(HP+2)/4+VP
	CLC
	ADC I,02
	LSR
	LSR
	CLC
	ADC VP
	RTS


VPHP24:	LDA HP			;VP-(HP+2)/4
	CLC
	ADC I,02
	LSR
	LSR
	JSR COMP
	CLC
	ADC VP
	RTS




;DECHP - DECREMENT HORIZONTAL POSITION BY ONE
DECHP:	LDA I,0FF
	STA HPOS
	DEC HPOS+1
	DEC HP
	RTS

;INCHP - INCREMENT HORIZONTAL POSITIONING ONE
INCHP:	LDA I,0
	STA HPOS
	INC HPOS+1
	INC HP
	RTS


;DECVP - DECREMENT VERTICAL POSITION BY ONE
DECVP:	LDA VPOS+1
	BNE 2$
	DEC VPOS+2
2$:	DEC VPOS+1
	DEC VP
	BPL 4$			;STAY IN 0-6 RANGE
	INC VP			;RESTORE 0
4$:	RTS
;INCVP - INCREMENT VERTICAL POSITION BY ONE LINE
INCVP:	LDA COLFLG
	BNE 10$			;IF COLLISION ALREADY DETECTED
	INC VPOS+1
	BNE 2$			;NO WRAP
	INC VPOS+2
2$:	LDA I,080
	STA VPOS
	INC VP
10$:	RTS

CKSUM6:	.BYTE 50			;3800-3BFF


	.REPT 31
	.BYTE 0			;FILL REMAINING MEMORY
	.ENDM
	.END
                                                                                                                                                                                                                                                                                                                                                                                                 